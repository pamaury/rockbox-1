/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * jz4760b version: 1.0
 * jz4760b authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_I2C_H__
#define __HEADERGEN_I2C_H__

#include "macro.h"

#define REG_I2C_CTRL(_n1)           jz_reg(I2C_CTRL(_n1))
#define JA_I2C_CTRL(_n1)            (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x0)
#define JT_I2C_CTRL(_n1)            JIO_8_RW
#define JN_I2C_CTRL(_n1)            I2C_CTRL
#define JI_I2C_CTRL(_n1)            (_n1)
#define BP_I2C_CTRL_STPHLD          7
#define BM_I2C_CTRL_STPHLD          0x80
#define BF_I2C_CTRL_STPHLD(v)       (((v) & 0x1) << 7)
#define BFM_I2C_CTRL_STPHLD(v)      BM_I2C_CTRL_STPHLD
#define BF_I2C_CTRL_STPHLD_V(e)     BF_I2C_CTRL_STPHLD(BV_I2C_CTRL_STPHLD__##e)
#define BFM_I2C_CTRL_STPHLD_V(v)    BM_I2C_CTRL_STPHLD
#define BP_I2C_CTRL_SLVDIS          6
#define BM_I2C_CTRL_SLVDIS          0x40
#define BF_I2C_CTRL_SLVDIS(v)       (((v) & 0x1) << 6)
#define BFM_I2C_CTRL_SLVDIS(v)      BM_I2C_CTRL_SLVDIS
#define BF_I2C_CTRL_SLVDIS_V(e)     BF_I2C_CTRL_SLVDIS(BV_I2C_CTRL_SLVDIS__##e)
#define BFM_I2C_CTRL_SLVDIS_V(v)    BM_I2C_CTRL_SLVDIS
#define BP_I2C_CTRL_REST            5
#define BM_I2C_CTRL_REST            0x20
#define BF_I2C_CTRL_REST(v)         (((v) & 0x1) << 5)
#define BFM_I2C_CTRL_REST(v)        BM_I2C_CTRL_REST
#define BF_I2C_CTRL_REST_V(e)       BF_I2C_CTRL_REST(BV_I2C_CTRL_REST__##e)
#define BFM_I2C_CTRL_REST_V(v)      BM_I2C_CTRL_REST
#define BP_I2C_CTRL_MATP            4
#define BM_I2C_CTRL_MATP            0x10
#define BF_I2C_CTRL_MATP(v)         (((v) & 0x1) << 4)
#define BFM_I2C_CTRL_MATP(v)        BM_I2C_CTRL_MATP
#define BF_I2C_CTRL_MATP_V(e)       BF_I2C_CTRL_MATP(BV_I2C_CTRL_MATP__##e)
#define BFM_I2C_CTRL_MATP_V(v)      BM_I2C_CTRL_MATP
#define BP_I2C_CTRL_SATP            3
#define BM_I2C_CTRL_SATP            0x8
#define BF_I2C_CTRL_SATP(v)         (((v) & 0x1) << 3)
#define BFM_I2C_CTRL_SATP(v)        BM_I2C_CTRL_SATP
#define BF_I2C_CTRL_SATP_V(e)       BF_I2C_CTRL_SATP(BV_I2C_CTRL_SATP__##e)
#define BFM_I2C_CTRL_SATP_V(v)      BM_I2C_CTRL_SATP
#define BP_I2C_CTRL_SPD             1
#define BM_I2C_CTRL_SPD             0x6
#define BV_I2C_CTRL_SPD__SPDS       0x1
#define BV_I2C_CTRL_SPD__SPDF       0x2
#define BF_I2C_CTRL_SPD(v)          (((v) & 0x3) << 1)
#define BFM_I2C_CTRL_SPD(v)         BM_I2C_CTRL_SPD
#define BF_I2C_CTRL_SPD_V(e)        BF_I2C_CTRL_SPD(BV_I2C_CTRL_SPD__##e)
#define BFM_I2C_CTRL_SPD_V(v)       BM_I2C_CTRL_SPD
#define BP_I2C_CTRL_MD              0
#define BM_I2C_CTRL_MD              0x1
#define BF_I2C_CTRL_MD(v)           (((v) & 0x1) << 0)
#define BFM_I2C_CTRL_MD(v)          BM_I2C_CTRL_MD
#define BF_I2C_CTRL_MD_V(e)         BF_I2C_CTRL_MD(BV_I2C_CTRL_MD__##e)
#define BFM_I2C_CTRL_MD_V(v)        BM_I2C_CTRL_MD

#define REG_I2C_TAR(_n1)                jz_reg(I2C_TAR(_n1))
#define JA_I2C_TAR(_n1)                 (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x4)
#define JT_I2C_TAR(_n1)                 JIO_16_RW
#define JN_I2C_TAR(_n1)                 I2C_TAR
#define JI_I2C_TAR(_n1)                 (_n1)
#define BP_I2C_TAR_MATP                 12
#define BM_I2C_TAR_MATP                 0x1000
#define BF_I2C_TAR_MATP(v)              (((v) & 0x1) << 12)
#define BFM_I2C_TAR_MATP(v)             BM_I2C_TAR_MATP
#define BF_I2C_TAR_MATP_V(e)            BF_I2C_TAR_MATP(BV_I2C_TAR_MATP__##e)
#define BFM_I2C_TAR_MATP_V(v)           BM_I2C_TAR_MATP
#define BP_I2C_TAR_SPECIAL              11
#define BM_I2C_TAR_SPECIAL              0x800
#define BF_I2C_TAR_SPECIAL(v)           (((v) & 0x1) << 11)
#define BFM_I2C_TAR_SPECIAL(v)          BM_I2C_TAR_SPECIAL
#define BF_I2C_TAR_SPECIAL_V(e)         BF_I2C_TAR_SPECIAL(BV_I2C_TAR_SPECIAL__##e)
#define BFM_I2C_TAR_SPECIAL_V(v)        BM_I2C_TAR_SPECIAL
#define BP_I2C_TAR_GC_OR_START          10
#define BM_I2C_TAR_GC_OR_START          0x400
#define BF_I2C_TAR_GC_OR_START(v)       (((v) & 0x1) << 10)
#define BFM_I2C_TAR_GC_OR_START(v)      BM_I2C_TAR_GC_OR_START
#define BF_I2C_TAR_GC_OR_START_V(e)     BF_I2C_TAR_GC_OR_START(BV_I2C_TAR_GC_OR_START__##e)
#define BFM_I2C_TAR_GC_OR_START_V(v)    BM_I2C_TAR_GC_OR_START

#define REG_I2C_SAR(_n1)    jz_reg(I2C_SAR(_n1))
#define JA_I2C_SAR(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x8)
#define JT_I2C_SAR(_n1)     JIO_16_RW
#define JN_I2C_SAR(_n1)     I2C_SAR
#define JI_I2C_SAR(_n1)     (_n1)

#define REG_I2C_DC(_n1)     jz_reg(I2C_DC(_n1))
#define JA_I2C_DC(_n1)      (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x10)
#define JT_I2C_DC(_n1)      JIO_16_RW
#define JN_I2C_DC(_n1)      I2C_DC
#define JI_I2C_DC(_n1)      (_n1)
#define BP_I2C_DC_CMD       8
#define BM_I2C_DC_CMD       0x100
#define BF_I2C_DC_CMD(v)    (((v) & 0x1) << 8)
#define BFM_I2C_DC_CMD(v)   BM_I2C_DC_CMD
#define BF_I2C_DC_CMD_V(e)  BF_I2C_DC_CMD(BV_I2C_DC_CMD__##e)
#define BFM_I2C_DC_CMD_V(v) BM_I2C_DC_CMD

#define REG_I2C_SHCNT(_n1)  jz_reg(I2C_SHCNT(_n1))
#define JA_I2C_SHCNT(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x14)
#define JT_I2C_SHCNT(_n1)   JIO_16_RW
#define JN_I2C_SHCNT(_n1)   I2C_SHCNT
#define JI_I2C_SHCNT(_n1)   (_n1)

#define REG_I2C_SLCNT(_n1)  jz_reg(I2C_SLCNT(_n1))
#define JA_I2C_SLCNT(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x18)
#define JT_I2C_SLCNT(_n1)   JIO_16_RW
#define JN_I2C_SLCNT(_n1)   I2C_SLCNT
#define JI_I2C_SLCNT(_n1)   (_n1)

#define REG_I2C_FHCNT(_n1)  jz_reg(I2C_FHCNT(_n1))
#define JA_I2C_FHCNT(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x1c)
#define JT_I2C_FHCNT(_n1)   JIO_16_RW
#define JN_I2C_FHCNT(_n1)   I2C_FHCNT
#define JI_I2C_FHCNT(_n1)   (_n1)

#define REG_I2C_FLCNT(_n1)  jz_reg(I2C_FLCNT(_n1))
#define JA_I2C_FLCNT(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x20)
#define JT_I2C_FLCNT(_n1)   JIO_16_RW
#define JN_I2C_FLCNT(_n1)   I2C_FLCNT
#define JI_I2C_FLCNT(_n1)   (_n1)

#define REG_I2C_INTST(_n1)          jz_reg(I2C_INTST(_n1))
#define JA_I2C_INTST(_n1)           (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x2c)
#define JT_I2C_INTST(_n1)           JIO_16_RW
#define JN_I2C_INTST(_n1)           I2C_INTST
#define JI_I2C_INTST(_n1)           (_n1)
#define BP_I2C_INTST_IGC            11
#define BM_I2C_INTST_IGC            0x800
#define BF_I2C_INTST_IGC(v)         (((v) & 0x1) << 11)
#define BFM_I2C_INTST_IGC(v)        BM_I2C_INTST_IGC
#define BF_I2C_INTST_IGC_V(e)       BF_I2C_INTST_IGC(BV_I2C_INTST_IGC__##e)
#define BFM_I2C_INTST_IGC_V(v)      BM_I2C_INTST_IGC
#define BP_I2C_INTST_ISTT           10
#define BM_I2C_INTST_ISTT           0x400
#define BF_I2C_INTST_ISTT(v)        (((v) & 0x1) << 10)
#define BFM_I2C_INTST_ISTT(v)       BM_I2C_INTST_ISTT
#define BF_I2C_INTST_ISTT_V(e)      BF_I2C_INTST_ISTT(BV_I2C_INTST_ISTT__##e)
#define BFM_I2C_INTST_ISTT_V(v)     BM_I2C_INTST_ISTT
#define BP_I2C_INTST_ISTP           9
#define BM_I2C_INTST_ISTP           0x200
#define BF_I2C_INTST_ISTP(v)        (((v) & 0x1) << 9)
#define BFM_I2C_INTST_ISTP(v)       BM_I2C_INTST_ISTP
#define BF_I2C_INTST_ISTP_V(e)      BF_I2C_INTST_ISTP(BV_I2C_INTST_ISTP__##e)
#define BFM_I2C_INTST_ISTP_V(v)     BM_I2C_INTST_ISTP
#define BP_I2C_INTST_IACT           8
#define BM_I2C_INTST_IACT           0x100
#define BF_I2C_INTST_IACT(v)        (((v) & 0x1) << 8)
#define BFM_I2C_INTST_IACT(v)       BM_I2C_INTST_IACT
#define BF_I2C_INTST_IACT_V(e)      BF_I2C_INTST_IACT(BV_I2C_INTST_IACT__##e)
#define BFM_I2C_INTST_IACT_V(v)     BM_I2C_INTST_IACT
#define BP_I2C_INTST_RXDN           7
#define BM_I2C_INTST_RXDN           0x80
#define BF_I2C_INTST_RXDN(v)        (((v) & 0x1) << 7)
#define BFM_I2C_INTST_RXDN(v)       BM_I2C_INTST_RXDN
#define BF_I2C_INTST_RXDN_V(e)      BF_I2C_INTST_RXDN(BV_I2C_INTST_RXDN__##e)
#define BFM_I2C_INTST_RXDN_V(v)     BM_I2C_INTST_RXDN
#define BP_I2C_INTST_TXABT          6
#define BM_I2C_INTST_TXABT          0x40
#define BF_I2C_INTST_TXABT(v)       (((v) & 0x1) << 6)
#define BFM_I2C_INTST_TXABT(v)      BM_I2C_INTST_TXABT
#define BF_I2C_INTST_TXABT_V(e)     BF_I2C_INTST_TXABT(BV_I2C_INTST_TXABT__##e)
#define BFM_I2C_INTST_TXABT_V(v)    BM_I2C_INTST_TXABT
#define BP_I2C_INTST_RDREQ          5
#define BM_I2C_INTST_RDREQ          0x20
#define BF_I2C_INTST_RDREQ(v)       (((v) & 0x1) << 5)
#define BFM_I2C_INTST_RDREQ(v)      BM_I2C_INTST_RDREQ
#define BF_I2C_INTST_RDREQ_V(e)     BF_I2C_INTST_RDREQ(BV_I2C_INTST_RDREQ__##e)
#define BFM_I2C_INTST_RDREQ_V(v)    BM_I2C_INTST_RDREQ
#define BP_I2C_INTST_TXEMP          4
#define BM_I2C_INTST_TXEMP          0x10
#define BF_I2C_INTST_TXEMP(v)       (((v) & 0x1) << 4)
#define BFM_I2C_INTST_TXEMP(v)      BM_I2C_INTST_TXEMP
#define BF_I2C_INTST_TXEMP_V(e)     BF_I2C_INTST_TXEMP(BV_I2C_INTST_TXEMP__##e)
#define BFM_I2C_INTST_TXEMP_V(v)    BM_I2C_INTST_TXEMP
#define BP_I2C_INTST_TXOF           3
#define BM_I2C_INTST_TXOF           0x8
#define BF_I2C_INTST_TXOF(v)        (((v) & 0x1) << 3)
#define BFM_I2C_INTST_TXOF(v)       BM_I2C_INTST_TXOF
#define BF_I2C_INTST_TXOF_V(e)      BF_I2C_INTST_TXOF(BV_I2C_INTST_TXOF__##e)
#define BFM_I2C_INTST_TXOF_V(v)     BM_I2C_INTST_TXOF
#define BP_I2C_INTST_RXFL           2
#define BM_I2C_INTST_RXFL           0x4
#define BF_I2C_INTST_RXFL(v)        (((v) & 0x1) << 2)
#define BFM_I2C_INTST_RXFL(v)       BM_I2C_INTST_RXFL
#define BF_I2C_INTST_RXFL_V(e)      BF_I2C_INTST_RXFL(BV_I2C_INTST_RXFL__##e)
#define BFM_I2C_INTST_RXFL_V(v)     BM_I2C_INTST_RXFL
#define BP_I2C_INTST_RXOF           1
#define BM_I2C_INTST_RXOF           0x2
#define BF_I2C_INTST_RXOF(v)        (((v) & 0x1) << 1)
#define BFM_I2C_INTST_RXOF(v)       BM_I2C_INTST_RXOF
#define BF_I2C_INTST_RXOF_V(e)      BF_I2C_INTST_RXOF(BV_I2C_INTST_RXOF__##e)
#define BFM_I2C_INTST_RXOF_V(v)     BM_I2C_INTST_RXOF
#define BP_I2C_INTST_RXUF           0
#define BM_I2C_INTST_RXUF           0x1
#define BF_I2C_INTST_RXUF(v)        (((v) & 0x1) << 0)
#define BFM_I2C_INTST_RXUF(v)       BM_I2C_INTST_RXUF
#define BF_I2C_INTST_RXUF_V(e)      BF_I2C_INTST_RXUF(BV_I2C_INTST_RXUF__##e)
#define BFM_I2C_INTST_RXUF_V(v)     BM_I2C_INTST_RXUF

#define REG_I2C_INTM(_n1)           jz_reg(I2C_INTM(_n1))
#define JA_I2C_INTM(_n1)            (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x30)
#define JT_I2C_INTM(_n1)            JIO_16_RW
#define JN_I2C_INTM(_n1)            I2C_INTM
#define JI_I2C_INTM(_n1)            (_n1)
#define BP_I2C_INTM_MIGC            11
#define BM_I2C_INTM_MIGC            0x800
#define BF_I2C_INTM_MIGC(v)         (((v) & 0x1) << 11)
#define BFM_I2C_INTM_MIGC(v)        BM_I2C_INTM_MIGC
#define BF_I2C_INTM_MIGC_V(e)       BF_I2C_INTM_MIGC(BV_I2C_INTM_MIGC__##e)
#define BFM_I2C_INTM_MIGC_V(v)      BM_I2C_INTM_MIGC
#define BP_I2C_INTM_MISTT           10
#define BM_I2C_INTM_MISTT           0x400
#define BF_I2C_INTM_MISTT(v)        (((v) & 0x1) << 10)
#define BFM_I2C_INTM_MISTT(v)       BM_I2C_INTM_MISTT
#define BF_I2C_INTM_MISTT_V(e)      BF_I2C_INTM_MISTT(BV_I2C_INTM_MISTT__##e)
#define BFM_I2C_INTM_MISTT_V(v)     BM_I2C_INTM_MISTT
#define BP_I2C_INTM_MISTP           9
#define BM_I2C_INTM_MISTP           0x200
#define BF_I2C_INTM_MISTP(v)        (((v) & 0x1) << 9)
#define BFM_I2C_INTM_MISTP(v)       BM_I2C_INTM_MISTP
#define BF_I2C_INTM_MISTP_V(e)      BF_I2C_INTM_MISTP(BV_I2C_INTM_MISTP__##e)
#define BFM_I2C_INTM_MISTP_V(v)     BM_I2C_INTM_MISTP
#define BP_I2C_INTM_MIACT           8
#define BM_I2C_INTM_MIACT           0x100
#define BF_I2C_INTM_MIACT(v)        (((v) & 0x1) << 8)
#define BFM_I2C_INTM_MIACT(v)       BM_I2C_INTM_MIACT
#define BF_I2C_INTM_MIACT_V(e)      BF_I2C_INTM_MIACT(BV_I2C_INTM_MIACT__##e)
#define BFM_I2C_INTM_MIACT_V(v)     BM_I2C_INTM_MIACT
#define BP_I2C_INTM_MRXDN           7
#define BM_I2C_INTM_MRXDN           0x80
#define BF_I2C_INTM_MRXDN(v)        (((v) & 0x1) << 7)
#define BFM_I2C_INTM_MRXDN(v)       BM_I2C_INTM_MRXDN
#define BF_I2C_INTM_MRXDN_V(e)      BF_I2C_INTM_MRXDN(BV_I2C_INTM_MRXDN__##e)
#define BFM_I2C_INTM_MRXDN_V(v)     BM_I2C_INTM_MRXDN
#define BP_I2C_INTM_MTXABT          6
#define BM_I2C_INTM_MTXABT          0x40
#define BF_I2C_INTM_MTXABT(v)       (((v) & 0x1) << 6)
#define BFM_I2C_INTM_MTXABT(v)      BM_I2C_INTM_MTXABT
#define BF_I2C_INTM_MTXABT_V(e)     BF_I2C_INTM_MTXABT(BV_I2C_INTM_MTXABT__##e)
#define BFM_I2C_INTM_MTXABT_V(v)    BM_I2C_INTM_MTXABT
#define BP_I2C_INTM_MRDREQ          5
#define BM_I2C_INTM_MRDREQ          0x20
#define BF_I2C_INTM_MRDREQ(v)       (((v) & 0x1) << 5)
#define BFM_I2C_INTM_MRDREQ(v)      BM_I2C_INTM_MRDREQ
#define BF_I2C_INTM_MRDREQ_V(e)     BF_I2C_INTM_MRDREQ(BV_I2C_INTM_MRDREQ__##e)
#define BFM_I2C_INTM_MRDREQ_V(v)    BM_I2C_INTM_MRDREQ
#define BP_I2C_INTM_MTXEMP          4
#define BM_I2C_INTM_MTXEMP          0x10
#define BF_I2C_INTM_MTXEMP(v)       (((v) & 0x1) << 4)
#define BFM_I2C_INTM_MTXEMP(v)      BM_I2C_INTM_MTXEMP
#define BF_I2C_INTM_MTXEMP_V(e)     BF_I2C_INTM_MTXEMP(BV_I2C_INTM_MTXEMP__##e)
#define BFM_I2C_INTM_MTXEMP_V(v)    BM_I2C_INTM_MTXEMP
#define BP_I2C_INTM_MTXOF           3
#define BM_I2C_INTM_MTXOF           0x8
#define BF_I2C_INTM_MTXOF(v)        (((v) & 0x1) << 3)
#define BFM_I2C_INTM_MTXOF(v)       BM_I2C_INTM_MTXOF
#define BF_I2C_INTM_MTXOF_V(e)      BF_I2C_INTM_MTXOF(BV_I2C_INTM_MTXOF__##e)
#define BFM_I2C_INTM_MTXOF_V(v)     BM_I2C_INTM_MTXOF
#define BP_I2C_INTM_MRXFL           2
#define BM_I2C_INTM_MRXFL           0x4
#define BF_I2C_INTM_MRXFL(v)        (((v) & 0x1) << 2)
#define BFM_I2C_INTM_MRXFL(v)       BM_I2C_INTM_MRXFL
#define BF_I2C_INTM_MRXFL_V(e)      BF_I2C_INTM_MRXFL(BV_I2C_INTM_MRXFL__##e)
#define BFM_I2C_INTM_MRXFL_V(v)     BM_I2C_INTM_MRXFL
#define BP_I2C_INTM_MRXOF           1
#define BM_I2C_INTM_MRXOF           0x2
#define BF_I2C_INTM_MRXOF(v)        (((v) & 0x1) << 1)
#define BFM_I2C_INTM_MRXOF(v)       BM_I2C_INTM_MRXOF
#define BF_I2C_INTM_MRXOF_V(e)      BF_I2C_INTM_MRXOF(BV_I2C_INTM_MRXOF__##e)
#define BFM_I2C_INTM_MRXOF_V(v)     BM_I2C_INTM_MRXOF
#define BP_I2C_INTM_MRXUF           0
#define BM_I2C_INTM_MRXUF           0x1
#define BF_I2C_INTM_MRXUF(v)        (((v) & 0x1) << 0)
#define BFM_I2C_INTM_MRXUF(v)       BM_I2C_INTM_MRXUF
#define BF_I2C_INTM_MRXUF_V(e)      BF_I2C_INTM_MRXUF(BV_I2C_INTM_MRXUF__##e)
#define BFM_I2C_INTM_MRXUF_V(v)     BM_I2C_INTM_MRXUF

#define REG_I2C_RXTL(_n1)   jz_reg(I2C_RXTL(_n1))
#define JA_I2C_RXTL(_n1)    (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x38)
#define JT_I2C_RXTL(_n1)    JIO_8_RW
#define JN_I2C_RXTL(_n1)    I2C_RXTL
#define JI_I2C_RXTL(_n1)    (_n1)

#define REG_I2C_TXTL(_n1)   jz_reg(I2C_TXTL(_n1))
#define JA_I2C_TXTL(_n1)    (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x3c)
#define JT_I2C_TXTL(_n1)    JIO_8_RW
#define JN_I2C_TXTL(_n1)    I2C_TXTL
#define JI_I2C_TXTL(_n1)    (_n1)

#define REG_I2C_CINTR(_n1)  jz_reg(I2C_CINTR(_n1))
#define JA_I2C_CINTR(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x40)
#define JT_I2C_CINTR(_n1)   JIO_8_RW
#define JN_I2C_CINTR(_n1)   I2C_CINTR
#define JI_I2C_CINTR(_n1)   (_n1)

#define REG_I2C_CRXUF(_n1)  jz_reg(I2C_CRXUF(_n1))
#define JA_I2C_CRXUF(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x44)
#define JT_I2C_CRXUF(_n1)   JIO_8_RW
#define JN_I2C_CRXUF(_n1)   I2C_CRXUF
#define JI_I2C_CRXUF(_n1)   (_n1)

#define REG_I2C_CRXOF(_n1)  jz_reg(I2C_CRXOF(_n1))
#define JA_I2C_CRXOF(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x48)
#define JT_I2C_CRXOF(_n1)   JIO_8_RW
#define JN_I2C_CRXOF(_n1)   I2C_CRXOF
#define JI_I2C_CRXOF(_n1)   (_n1)

#define REG_I2C_CTXOF(_n1)  jz_reg(I2C_CTXOF(_n1))
#define JA_I2C_CTXOF(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x4c)
#define JT_I2C_CTXOF(_n1)   JIO_8_RW
#define JN_I2C_CTXOF(_n1)   I2C_CTXOF
#define JI_I2C_CTXOF(_n1)   (_n1)

#define REG_I2C_CRXREQ(_n1) jz_reg(I2C_CRXREQ(_n1))
#define JA_I2C_CRXREQ(_n1)  (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x50)
#define JT_I2C_CRXREQ(_n1)  JIO_8_RW
#define JN_I2C_CRXREQ(_n1)  I2C_CRXREQ
#define JI_I2C_CRXREQ(_n1)  (_n1)

#define REG_I2C_CTXABRT(_n1)    jz_reg(I2C_CTXABRT(_n1))
#define JA_I2C_CTXABRT(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x54)
#define JT_I2C_CTXABRT(_n1)     JIO_8_RW
#define JN_I2C_CTXABRT(_n1)     I2C_CTXABRT
#define JI_I2C_CTXABRT(_n1)     (_n1)

#define REG_I2C_CRXDONE(_n1)    jz_reg(I2C_CRXDONE(_n1))
#define JA_I2C_CRXDONE(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x58)
#define JT_I2C_CRXDONE(_n1)     JIO_8_RW
#define JN_I2C_CRXDONE(_n1)     I2C_CRXDONE
#define JI_I2C_CRXDONE(_n1)     (_n1)

#define REG_I2C_CACT(_n1)   jz_reg(I2C_CACT(_n1))
#define JA_I2C_CACT(_n1)    (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x5c)
#define JT_I2C_CACT(_n1)    JIO_8_RW
#define JN_I2C_CACT(_n1)    I2C_CACT
#define JI_I2C_CACT(_n1)    (_n1)

#define REG_I2C_CSTP(_n1)   jz_reg(I2C_CSTP(_n1))
#define JA_I2C_CSTP(_n1)    (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x60)
#define JT_I2C_CSTP(_n1)    JIO_8_RW
#define JN_I2C_CSTP(_n1)    I2C_CSTP
#define JI_I2C_CSTP(_n1)    (_n1)

#define REG_I2C_CSTT(_n1)   jz_reg(I2C_CSTT(_n1))
#define JA_I2C_CSTT(_n1)    (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x64)
#define JT_I2C_CSTT(_n1)    JIO_16_RW
#define JN_I2C_CSTT(_n1)    I2C_CSTT
#define JI_I2C_CSTT(_n1)    (_n1)

#define REG_I2C_CGC(_n1)    jz_reg(I2C_CGC(_n1))
#define JA_I2C_CGC(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x68)
#define JT_I2C_CGC(_n1)     JIO_8_RW
#define JN_I2C_CGC(_n1)     I2C_CGC
#define JI_I2C_CGC(_n1)     (_n1)

#define REG_I2C_ENB(_n1)        jz_reg(I2C_ENB(_n1))
#define JA_I2C_ENB(_n1)         (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x6c)
#define JT_I2C_ENB(_n1)         JIO_8_RW
#define JN_I2C_ENB(_n1)         I2C_ENB
#define JI_I2C_ENB(_n1)         (_n1)
#define BP_I2C_ENB_I2CENB       0
#define BM_I2C_ENB_I2CENB       0x1
#define BF_I2C_ENB_I2CENB(v)    (((v) & 0x1) << 0)
#define BFM_I2C_ENB_I2CENB(v)   BM_I2C_ENB_I2CENB
#define BF_I2C_ENB_I2CENB_V(e)  BF_I2C_ENB_I2CENB(BV_I2C_ENB_I2CENB__##e)
#define BFM_I2C_ENB_I2CENB_V(v) BM_I2C_ENB_I2CENB

#define REG_I2C_STA(_n1)        jz_reg(I2C_STA(_n1))
#define JA_I2C_STA(_n1)         (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x70)
#define JT_I2C_STA(_n1)         JIO_8_RW
#define JN_I2C_STA(_n1)         I2C_STA
#define JI_I2C_STA(_n1)         (_n1)
#define BP_I2C_STA_SLVACT       6
#define BM_I2C_STA_SLVACT       0x40
#define BF_I2C_STA_SLVACT(v)    (((v) & 0x1) << 6)
#define BFM_I2C_STA_SLVACT(v)   BM_I2C_STA_SLVACT
#define BF_I2C_STA_SLVACT_V(e)  BF_I2C_STA_SLVACT(BV_I2C_STA_SLVACT__##e)
#define BFM_I2C_STA_SLVACT_V(v) BM_I2C_STA_SLVACT
#define BP_I2C_STA_MSTACT       5
#define BM_I2C_STA_MSTACT       0x20
#define BF_I2C_STA_MSTACT(v)    (((v) & 0x1) << 5)
#define BFM_I2C_STA_MSTACT(v)   BM_I2C_STA_MSTACT
#define BF_I2C_STA_MSTACT_V(e)  BF_I2C_STA_MSTACT(BV_I2C_STA_MSTACT__##e)
#define BFM_I2C_STA_MSTACT_V(v) BM_I2C_STA_MSTACT
#define BP_I2C_STA_RFF          4
#define BM_I2C_STA_RFF          0x10
#define BF_I2C_STA_RFF(v)       (((v) & 0x1) << 4)
#define BFM_I2C_STA_RFF(v)      BM_I2C_STA_RFF
#define BF_I2C_STA_RFF_V(e)     BF_I2C_STA_RFF(BV_I2C_STA_RFF__##e)
#define BFM_I2C_STA_RFF_V(v)    BM_I2C_STA_RFF
#define BP_I2C_STA_RFNE         3
#define BM_I2C_STA_RFNE         0x8
#define BF_I2C_STA_RFNE(v)      (((v) & 0x1) << 3)
#define BFM_I2C_STA_RFNE(v)     BM_I2C_STA_RFNE
#define BF_I2C_STA_RFNE_V(e)    BF_I2C_STA_RFNE(BV_I2C_STA_RFNE__##e)
#define BFM_I2C_STA_RFNE_V(v)   BM_I2C_STA_RFNE
#define BP_I2C_STA_TFE          2
#define BM_I2C_STA_TFE          0x4
#define BF_I2C_STA_TFE(v)       (((v) & 0x1) << 2)
#define BFM_I2C_STA_TFE(v)      BM_I2C_STA_TFE
#define BF_I2C_STA_TFE_V(e)     BF_I2C_STA_TFE(BV_I2C_STA_TFE__##e)
#define BFM_I2C_STA_TFE_V(v)    BM_I2C_STA_TFE
#define BP_I2C_STA_TFNF         1
#define BM_I2C_STA_TFNF         0x2
#define BF_I2C_STA_TFNF(v)      (((v) & 0x1) << 1)
#define BFM_I2C_STA_TFNF(v)     BM_I2C_STA_TFNF
#define BF_I2C_STA_TFNF_V(e)    BF_I2C_STA_TFNF(BV_I2C_STA_TFNF__##e)
#define BFM_I2C_STA_TFNF_V(v)   BM_I2C_STA_TFNF
#define BP_I2C_STA_ACT          0
#define BM_I2C_STA_ACT          0x1
#define BF_I2C_STA_ACT(v)       (((v) & 0x1) << 0)
#define BFM_I2C_STA_ACT(v)      BM_I2C_STA_ACT
#define BF_I2C_STA_ACT_V(e)     BF_I2C_STA_ACT(BV_I2C_STA_ACT__##e)
#define BFM_I2C_STA_ACT_V(v)    BM_I2C_STA_ACT

#define REG_I2C_TXFLR(_n1)  jz_reg(I2C_TXFLR(_n1))
#define JA_I2C_TXFLR(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x74)
#define JT_I2C_TXFLR(_n1)   JIO_8_RW
#define JN_I2C_TXFLR(_n1)   I2C_TXFLR
#define JI_I2C_TXFLR(_n1)   (_n1)

#define REG_I2C_RXFLR(_n1)  jz_reg(I2C_RXFLR(_n1))
#define JA_I2C_RXFLR(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x78)
#define JT_I2C_RXFLR(_n1)   JIO_8_RW
#define JN_I2C_RXFLR(_n1)   I2C_RXFLR
#define JI_I2C_RXFLR(_n1)   (_n1)

#define REG_I2C_TXABRT(_n1)                     jz_reg(I2C_TXABRT(_n1))
#define JA_I2C_TXABRT(_n1)                      (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x80)
#define JT_I2C_TXABRT(_n1)                      JIO_16_RW
#define JN_I2C_TXABRT(_n1)                      I2C_TXABRT
#define JI_I2C_TXABRT(_n1)                      (_n1)
#define BP_I2C_TXABRT_SLVRD_INTX                15
#define BM_I2C_TXABRT_SLVRD_INTX                0x8000
#define BF_I2C_TXABRT_SLVRD_INTX(v)             (((v) & 0x1) << 15)
#define BFM_I2C_TXABRT_SLVRD_INTX(v)            BM_I2C_TXABRT_SLVRD_INTX
#define BF_I2C_TXABRT_SLVRD_INTX_V(e)           BF_I2C_TXABRT_SLVRD_INTX(BV_I2C_TXABRT_SLVRD_INTX__##e)
#define BFM_I2C_TXABRT_SLVRD_INTX_V(v)          BM_I2C_TXABRT_SLVRD_INTX
#define BP_I2C_TXABRT_SLV_ARBLOST               14
#define BM_I2C_TXABRT_SLV_ARBLOST               0x4000
#define BF_I2C_TXABRT_SLV_ARBLOST(v)            (((v) & 0x1) << 14)
#define BFM_I2C_TXABRT_SLV_ARBLOST(v)           BM_I2C_TXABRT_SLV_ARBLOST
#define BF_I2C_TXABRT_SLV_ARBLOST_V(e)          BF_I2C_TXABRT_SLV_ARBLOST(BV_I2C_TXABRT_SLV_ARBLOST__##e)
#define BFM_I2C_TXABRT_SLV_ARBLOST_V(v)         BM_I2C_TXABRT_SLV_ARBLOST
#define BP_I2C_TXABRT_SLVFLUSH_TXFIFO           13
#define BM_I2C_TXABRT_SLVFLUSH_TXFIFO           0x2000
#define BF_I2C_TXABRT_SLVFLUSH_TXFIFO(v)        (((v) & 0x1) << 13)
#define BFM_I2C_TXABRT_SLVFLUSH_TXFIFO(v)       BM_I2C_TXABRT_SLVFLUSH_TXFIFO
#define BF_I2C_TXABRT_SLVFLUSH_TXFIFO_V(e)      BF_I2C_TXABRT_SLVFLUSH_TXFIFO(BV_I2C_TXABRT_SLVFLUSH_TXFIFO__##e)
#define BFM_I2C_TXABRT_SLVFLUSH_TXFIFO_V(v)     BM_I2C_TXABRT_SLVFLUSH_TXFIFO
#define BP_I2C_TXABRT_ARB_LOST                  12
#define BM_I2C_TXABRT_ARB_LOST                  0x1000
#define BF_I2C_TXABRT_ARB_LOST(v)               (((v) & 0x1) << 12)
#define BFM_I2C_TXABRT_ARB_LOST(v)              BM_I2C_TXABRT_ARB_LOST
#define BF_I2C_TXABRT_ARB_LOST_V(e)             BF_I2C_TXABRT_ARB_LOST(BV_I2C_TXABRT_ARB_LOST__##e)
#define BFM_I2C_TXABRT_ARB_LOST_V(v)            BM_I2C_TXABRT_ARB_LOST
#define BP_I2C_TXABRT_ABRT_MASTER_DIS           11
#define BM_I2C_TXABRT_ABRT_MASTER_DIS           0x800
#define BF_I2C_TXABRT_ABRT_MASTER_DIS(v)        (((v) & 0x1) << 11)
#define BFM_I2C_TXABRT_ABRT_MASTER_DIS(v)       BM_I2C_TXABRT_ABRT_MASTER_DIS
#define BF_I2C_TXABRT_ABRT_MASTER_DIS_V(e)      BF_I2C_TXABRT_ABRT_MASTER_DIS(BV_I2C_TXABRT_ABRT_MASTER_DIS__##e)
#define BFM_I2C_TXABRT_ABRT_MASTER_DIS_V(v)     BM_I2C_TXABRT_ABRT_MASTER_DIS
#define BP_I2C_TXABRT_ABRT_10B_RD_NORSTRT       10
#define BM_I2C_TXABRT_ABRT_10B_RD_NORSTRT       0x400
#define BF_I2C_TXABRT_ABRT_10B_RD_NORSTRT(v)    (((v) & 0x1) << 10)
#define BFM_I2C_TXABRT_ABRT_10B_RD_NORSTRT(v)   BM_I2C_TXABRT_ABRT_10B_RD_NORSTRT
#define BF_I2C_TXABRT_ABRT_10B_RD_NORSTRT_V(e)  BF_I2C_TXABRT_ABRT_10B_RD_NORSTRT(BV_I2C_TXABRT_ABRT_10B_RD_NORSTRT__##e)
#define BFM_I2C_TXABRT_ABRT_10B_RD_NORSTRT_V(v) BM_I2C_TXABRT_ABRT_10B_RD_NORSTRT
#define BP_I2C_TXABRT_SBYTE_NORSTRT             9
#define BM_I2C_TXABRT_SBYTE_NORSTRT             0x200
#define BF_I2C_TXABRT_SBYTE_NORSTRT(v)          (((v) & 0x1) << 9)
#define BFM_I2C_TXABRT_SBYTE_NORSTRT(v)         BM_I2C_TXABRT_SBYTE_NORSTRT
#define BF_I2C_TXABRT_SBYTE_NORSTRT_V(e)        BF_I2C_TXABRT_SBYTE_NORSTRT(BV_I2C_TXABRT_SBYTE_NORSTRT__##e)
#define BFM_I2C_TXABRT_SBYTE_NORSTRT_V(v)       BM_I2C_TXABRT_SBYTE_NORSTRT
#define BP_I2C_TXABRT_ABRT_HS_NORSTRT           8
#define BM_I2C_TXABRT_ABRT_HS_NORSTRT           0x100
#define BF_I2C_TXABRT_ABRT_HS_NORSTRT(v)        (((v) & 0x1) << 8)
#define BFM_I2C_TXABRT_ABRT_HS_NORSTRT(v)       BM_I2C_TXABRT_ABRT_HS_NORSTRT
#define BF_I2C_TXABRT_ABRT_HS_NORSTRT_V(e)      BF_I2C_TXABRT_ABRT_HS_NORSTRT(BV_I2C_TXABRT_ABRT_HS_NORSTRT__##e)
#define BFM_I2C_TXABRT_ABRT_HS_NORSTRT_V(v)     BM_I2C_TXABRT_ABRT_HS_NORSTRT
#define BP_I2C_TXABRT_SBYTE_ACKDET              7
#define BM_I2C_TXABRT_SBYTE_ACKDET              0x80
#define BF_I2C_TXABRT_SBYTE_ACKDET(v)           (((v) & 0x1) << 7)
#define BFM_I2C_TXABRT_SBYTE_ACKDET(v)          BM_I2C_TXABRT_SBYTE_ACKDET
#define BF_I2C_TXABRT_SBYTE_ACKDET_V(e)         BF_I2C_TXABRT_SBYTE_ACKDET(BV_I2C_TXABRT_SBYTE_ACKDET__##e)
#define BFM_I2C_TXABRT_SBYTE_ACKDET_V(v)        BM_I2C_TXABRT_SBYTE_ACKDET
#define BP_I2C_TXABRT_ABRT_HS_ACKD              6
#define BM_I2C_TXABRT_ABRT_HS_ACKD              0x40
#define BF_I2C_TXABRT_ABRT_HS_ACKD(v)           (((v) & 0x1) << 6)
#define BFM_I2C_TXABRT_ABRT_HS_ACKD(v)          BM_I2C_TXABRT_ABRT_HS_ACKD
#define BF_I2C_TXABRT_ABRT_HS_ACKD_V(e)         BF_I2C_TXABRT_ABRT_HS_ACKD(BV_I2C_TXABRT_ABRT_HS_ACKD__##e)
#define BFM_I2C_TXABRT_ABRT_HS_ACKD_V(v)        BM_I2C_TXABRT_ABRT_HS_ACKD
#define BP_I2C_TXABRT_ABRT_GCALL_READ           5
#define BM_I2C_TXABRT_ABRT_GCALL_READ           0x20
#define BF_I2C_TXABRT_ABRT_GCALL_READ(v)        (((v) & 0x1) << 5)
#define BFM_I2C_TXABRT_ABRT_GCALL_READ(v)       BM_I2C_TXABRT_ABRT_GCALL_READ
#define BF_I2C_TXABRT_ABRT_GCALL_READ_V(e)      BF_I2C_TXABRT_ABRT_GCALL_READ(BV_I2C_TXABRT_ABRT_GCALL_READ__##e)
#define BFM_I2C_TXABRT_ABRT_GCALL_READ_V(v)     BM_I2C_TXABRT_ABRT_GCALL_READ
#define BP_I2C_TXABRT_ABRT_GCALL_NOACK          4
#define BM_I2C_TXABRT_ABRT_GCALL_NOACK          0x10
#define BF_I2C_TXABRT_ABRT_GCALL_NOACK(v)       (((v) & 0x1) << 4)
#define BFM_I2C_TXABRT_ABRT_GCALL_NOACK(v)      BM_I2C_TXABRT_ABRT_GCALL_NOACK
#define BF_I2C_TXABRT_ABRT_GCALL_NOACK_V(e)     BF_I2C_TXABRT_ABRT_GCALL_NOACK(BV_I2C_TXABRT_ABRT_GCALL_NOACK__##e)
#define BFM_I2C_TXABRT_ABRT_GCALL_NOACK_V(v)    BM_I2C_TXABRT_ABRT_GCALL_NOACK
#define BP_I2C_TXABRT_ABRT_XDATA_NOACK          3
#define BM_I2C_TXABRT_ABRT_XDATA_NOACK          0x8
#define BF_I2C_TXABRT_ABRT_XDATA_NOACK(v)       (((v) & 0x1) << 3)
#define BFM_I2C_TXABRT_ABRT_XDATA_NOACK(v)      BM_I2C_TXABRT_ABRT_XDATA_NOACK
#define BF_I2C_TXABRT_ABRT_XDATA_NOACK_V(e)     BF_I2C_TXABRT_ABRT_XDATA_NOACK(BV_I2C_TXABRT_ABRT_XDATA_NOACK__##e)
#define BFM_I2C_TXABRT_ABRT_XDATA_NOACK_V(v)    BM_I2C_TXABRT_ABRT_XDATA_NOACK
#define BP_I2C_TXABRT_ABRT_10ADDR2_NOACK        2
#define BM_I2C_TXABRT_ABRT_10ADDR2_NOACK        0x4
#define BF_I2C_TXABRT_ABRT_10ADDR2_NOACK(v)     (((v) & 0x1) << 2)
#define BFM_I2C_TXABRT_ABRT_10ADDR2_NOACK(v)    BM_I2C_TXABRT_ABRT_10ADDR2_NOACK
#define BF_I2C_TXABRT_ABRT_10ADDR2_NOACK_V(e)   BF_I2C_TXABRT_ABRT_10ADDR2_NOACK(BV_I2C_TXABRT_ABRT_10ADDR2_NOACK__##e)
#define BFM_I2C_TXABRT_ABRT_10ADDR2_NOACK_V(v)  BM_I2C_TXABRT_ABRT_10ADDR2_NOACK
#define BP_I2C_TXABRT_ABRT_10ADDR1_NOACK        1
#define BM_I2C_TXABRT_ABRT_10ADDR1_NOACK        0x2
#define BF_I2C_TXABRT_ABRT_10ADDR1_NOACK(v)     (((v) & 0x1) << 1)
#define BFM_I2C_TXABRT_ABRT_10ADDR1_NOACK(v)    BM_I2C_TXABRT_ABRT_10ADDR1_NOACK
#define BF_I2C_TXABRT_ABRT_10ADDR1_NOACK_V(e)   BF_I2C_TXABRT_ABRT_10ADDR1_NOACK(BV_I2C_TXABRT_ABRT_10ADDR1_NOACK__##e)
#define BFM_I2C_TXABRT_ABRT_10ADDR1_NOACK_V(v)  BM_I2C_TXABRT_ABRT_10ADDR1_NOACK
#define BP_I2C_TXABRT_ABRT_7B_ADDR_NOACK        0
#define BM_I2C_TXABRT_ABRT_7B_ADDR_NOACK        0x1
#define BF_I2C_TXABRT_ABRT_7B_ADDR_NOACK(v)     (((v) & 0x1) << 0)
#define BFM_I2C_TXABRT_ABRT_7B_ADDR_NOACK(v)    BM_I2C_TXABRT_ABRT_7B_ADDR_NOACK
#define BF_I2C_TXABRT_ABRT_7B_ADDR_NOACK_V(e)   BF_I2C_TXABRT_ABRT_7B_ADDR_NOACK(BV_I2C_TXABRT_ABRT_7B_ADDR_NOACK__##e)
#define BFM_I2C_TXABRT_ABRT_7B_ADDR_NOACK_V(v)  BM_I2C_TXABRT_ABRT_7B_ADDR_NOACK

#define REG_I2C_DMACR(_n1)  jz_reg(I2C_DMACR(_n1))
#define JA_I2C_DMACR(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x88)
#define JT_I2C_DMACR(_n1)   JIO_8_RW
#define JN_I2C_DMACR(_n1)   I2C_DMACR
#define JI_I2C_DMACR(_n1)   (_n1)

#define REG_I2C_DMATDLR(_n1)    jz_reg(I2C_DMATDLR(_n1))
#define JA_I2C_DMATDLR(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x8c)
#define JT_I2C_DMATDLR(_n1)     JIO_8_RW
#define JN_I2C_DMATDLR(_n1)     I2C_DMATDLR
#define JI_I2C_DMATDLR(_n1)     (_n1)

#define REG_I2C_DMARDLR(_n1)    jz_reg(I2C_DMARDLR(_n1))
#define JA_I2C_DMARDLR(_n1)     (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x90)
#define JT_I2C_DMARDLR(_n1)     JIO_8_RW
#define JN_I2C_DMARDLR(_n1)     I2C_DMARDLR
#define JI_I2C_DMARDLR(_n1)     (_n1)

#define REG_I2C_SDASU(_n1)  jz_reg(I2C_SDASU(_n1))
#define JA_I2C_SDASU(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x94)
#define JT_I2C_SDASU(_n1)   JIO_8_RW
#define JN_I2C_SDASU(_n1)   I2C_SDASU
#define JI_I2C_SDASU(_n1)   (_n1)

#define REG_I2C_ACKGC(_n1)  jz_reg(I2C_ACKGC(_n1))
#define JA_I2C_ACKGC(_n1)   (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x98)
#define JT_I2C_ACKGC(_n1)   JIO_8_RW
#define JN_I2C_ACKGC(_n1)   I2C_ACKGC
#define JI_I2C_ACKGC(_n1)   (_n1)

#define REG_I2C_ENSTA(_n1)          jz_reg(I2C_ENSTA(_n1))
#define JA_I2C_ENSTA(_n1)           (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0x9c)
#define JT_I2C_ENSTA(_n1)           JIO_8_RW
#define JN_I2C_ENSTA(_n1)           I2C_ENSTA
#define JI_I2C_ENSTA(_n1)           (_n1)
#define BP_I2C_ENSTA_SLVRDLST       2
#define BM_I2C_ENSTA_SLVRDLST       0x4
#define BF_I2C_ENSTA_SLVRDLST(v)    (((v) & 0x1) << 2)
#define BFM_I2C_ENSTA_SLVRDLST(v)   BM_I2C_ENSTA_SLVRDLST
#define BF_I2C_ENSTA_SLVRDLST_V(e)  BF_I2C_ENSTA_SLVRDLST(BV_I2C_ENSTA_SLVRDLST__##e)
#define BFM_I2C_ENSTA_SLVRDLST_V(v) BM_I2C_ENSTA_SLVRDLST
#define BP_I2C_ENSTA_SLVDISB        1
#define BM_I2C_ENSTA_SLVDISB        0x2
#define BF_I2C_ENSTA_SLVDISB(v)     (((v) & 0x1) << 1)
#define BFM_I2C_ENSTA_SLVDISB(v)    BM_I2C_ENSTA_SLVDISB
#define BF_I2C_ENSTA_SLVDISB_V(e)   BF_I2C_ENSTA_SLVDISB(BV_I2C_ENSTA_SLVDISB__##e)
#define BFM_I2C_ENSTA_SLVDISB_V(v)  BM_I2C_ENSTA_SLVDISB
#define BP_I2C_ENSTA_I2CEN          0
#define BM_I2C_ENSTA_I2CEN          0x1
#define BF_I2C_ENSTA_I2CEN(v)       (((v) & 0x1) << 0)
#define BFM_I2C_ENSTA_I2CEN(v)      BM_I2C_ENSTA_I2CEN
#define BF_I2C_ENSTA_I2CEN_V(e)     BF_I2C_ENSTA_I2CEN(BV_I2C_ENSTA_I2CEN__##e)
#define BFM_I2C_ENSTA_I2CEN_V(v)    BM_I2C_ENSTA_I2CEN

#define REG_I2C_SDAHD(_n1)              jz_reg(I2C_SDAHD(_n1))
#define JA_I2C_SDAHD(_n1)               (((_n1) == 0 ? 0xb0050000 : (_n1) == 1 ? 0xb0051000 : 0xb0055000) + 0xd0)
#define JT_I2C_SDAHD(_n1)               JIO_16_RW
#define JN_I2C_SDAHD(_n1)               I2C_SDAHD
#define JI_I2C_SDAHD(_n1)               (_n1)
#define BP_I2C_SDAHD_HOLD_TIME_EN       8
#define BM_I2C_SDAHD_HOLD_TIME_EN       0x100
#define BF_I2C_SDAHD_HOLD_TIME_EN(v)    (((v) & 0x1) << 8)
#define BFM_I2C_SDAHD_HOLD_TIME_EN(v)   BM_I2C_SDAHD_HOLD_TIME_EN
#define BF_I2C_SDAHD_HOLD_TIME_EN_V(e)  BF_I2C_SDAHD_HOLD_TIME_EN(BV_I2C_SDAHD_HOLD_TIME_EN__##e)
#define BFM_I2C_SDAHD_HOLD_TIME_EN_V(v) BM_I2C_SDAHD_HOLD_TIME_EN

#endif /* __HEADERGEN_I2C_H__*/
