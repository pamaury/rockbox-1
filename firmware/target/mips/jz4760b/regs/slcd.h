/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * jz4760b version: 1.0
 * jz4760b authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_SLCD_H__
#define __HEADERGEN_SLCD_H__

#include "macro.h"

#define REG_SLCD_SCFG                           jz_reg(SLCD_SCFG)
#define JA_SLCD_SCFG                            (0xb3050000 + 0xa0)
#define JT_SLCD_SCFG                            JIO_32_RW
#define JN_SLCD_SCFG                            SLCD_SCFG
#define JI_SLCD_SCFG                            
#define BP_SLCD_SCFG_DATA_WIDTH                 10
#define BM_SLCD_SCFG_DATA_WIDTH                 0x1c00
#define BV_SLCD_SCFG_DATA_WIDTH__18BIT          0x0
#define BV_SLCD_SCFG_DATA_WIDTH__16BIT          0x1
#define BV_SLCD_SCFG_DATA_WIDTH__8BIT_x3        0x2
#define BV_SLCD_SCFG_DATA_WIDTH__8BIT_x2        0x3
#define BV_SLCD_SCFG_DATA_WIDTH__8BIT_x1        0x4
#define BV_SLCD_SCFG_DATA_WIDTH__24BIT          0x5
#define BV_SLCD_SCFG_DATA_WIDTH__9BIT_x2        0x7
#define BF_SLCD_SCFG_DATA_WIDTH(v)              (((v) & 0x7) << 10)
#define BFM_SLCD_SCFG_DATA_WIDTH(v)             BM_SLCD_SCFG_DATA_WIDTH
#define BF_SLCD_SCFG_DATA_WIDTH_V(e)            BF_SLCD_SCFG_DATA_WIDTH(BV_SLCD_SCFG_DATA_WIDTH__##e)
#define BFM_SLCD_SCFG_DATA_WIDTH_V(v)           BM_SLCD_SCFG_DATA_WIDTH
#define BP_SLCD_SCFG_CMD_WIDTH                  8
#define BM_SLCD_SCFG_CMD_WIDTH                  0x300
#define BV_SLCD_SCFG_CMD_WIDTH__16BIT           0x0
#define BV_SLCD_SCFG_CMD_WIDTH__8BIT            0x1
#define BV_SLCD_SCFG_CMD_WIDTH__18BIT           0x2
#define BV_SLCD_SCFG_CMD_WIDTH__24BIT           0x3
#define BF_SLCD_SCFG_CMD_WIDTH(v)               (((v) & 0x3) << 8)
#define BFM_SLCD_SCFG_CMD_WIDTH(v)              BM_SLCD_SCFG_CMD_WIDTH
#define BF_SLCD_SCFG_CMD_WIDTH_V(e)             BF_SLCD_SCFG_CMD_WIDTH(BV_SLCD_SCFG_CMD_WIDTH__##e)
#define BFM_SLCD_SCFG_CMD_WIDTH_V(v)            BM_SLCD_SCFG_CMD_WIDTH
#define BP_SLCD_SCFG_CS_ACTIVE_HIGH             4
#define BM_SLCD_SCFG_CS_ACTIVE_HIGH             0x10
#define BF_SLCD_SCFG_CS_ACTIVE_HIGH(v)          (((v) & 0x1) << 4)
#define BFM_SLCD_SCFG_CS_ACTIVE_HIGH(v)         BM_SLCD_SCFG_CS_ACTIVE_HIGH
#define BF_SLCD_SCFG_CS_ACTIVE_HIGH_V(e)        BF_SLCD_SCFG_CS_ACTIVE_HIGH(BV_SLCD_SCFG_CS_ACTIVE_HIGH__##e)
#define BFM_SLCD_SCFG_CS_ACTIVE_HIGH_V(v)       BM_SLCD_SCFG_CS_ACTIVE_HIGH
#define BP_SLCD_SCFG_RS_CMD_HIGH                3
#define BM_SLCD_SCFG_RS_CMD_HIGH                0x8
#define BF_SLCD_SCFG_RS_CMD_HIGH(v)             (((v) & 0x1) << 3)
#define BFM_SLCD_SCFG_RS_CMD_HIGH(v)            BM_SLCD_SCFG_RS_CMD_HIGH
#define BF_SLCD_SCFG_RS_CMD_HIGH_V(e)           BF_SLCD_SCFG_RS_CMD_HIGH(BV_SLCD_SCFG_RS_CMD_HIGH__##e)
#define BFM_SLCD_SCFG_RS_CMD_HIGH_V(v)          BM_SLCD_SCFG_RS_CMD_HIGH
#define BP_SLCD_SCFG_CLK_ACTIVE_RISING          1
#define BM_SLCD_SCFG_CLK_ACTIVE_RISING          0x2
#define BF_SLCD_SCFG_CLK_ACTIVE_RISING(v)       (((v) & 0x1) << 1)
#define BFM_SLCD_SCFG_CLK_ACTIVE_RISING(v)      BM_SLCD_SCFG_CLK_ACTIVE_RISING
#define BF_SLCD_SCFG_CLK_ACTIVE_RISING_V(e)     BF_SLCD_SCFG_CLK_ACTIVE_RISING(BV_SLCD_SCFG_CLK_ACTIVE_RISING__##e)
#define BFM_SLCD_SCFG_CLK_ACTIVE_RISING_V(v)    BM_SLCD_SCFG_CLK_ACTIVE_RISING
#define BP_SLCD_SCFG_TYPE_SERIAL                0
#define BM_SLCD_SCFG_TYPE_SERIAL                0x1
#define BF_SLCD_SCFG_TYPE_SERIAL(v)             (((v) & 0x1) << 0)
#define BFM_SLCD_SCFG_TYPE_SERIAL(v)            BM_SLCD_SCFG_TYPE_SERIAL
#define BF_SLCD_SCFG_TYPE_SERIAL_V(e)           BF_SLCD_SCFG_TYPE_SERIAL(BV_SLCD_SCFG_TYPE_SERIAL__##e)
#define BFM_SLCD_SCFG_TYPE_SERIAL_V(v)          BM_SLCD_SCFG_TYPE_SERIAL

#define REG_SLCD_SCTRL                  jz_reg(SLCD_SCTRL)
#define JA_SLCD_SCTRL                   (0xb3050000 + 0xa4)
#define JT_SLCD_SCTRL                   JIO_8_RW
#define JN_SLCD_SCTRL                   SLCD_SCTRL
#define JI_SLCD_SCTRL                   
#define BP_SLCD_SCTRL_DMA_MODE          2
#define BM_SLCD_SCTRL_DMA_MODE          0x4
#define BF_SLCD_SCTRL_DMA_MODE(v)       (((v) & 0x1) << 2)
#define BFM_SLCD_SCTRL_DMA_MODE(v)      BM_SLCD_SCTRL_DMA_MODE
#define BF_SLCD_SCTRL_DMA_MODE_V(e)     BF_SLCD_SCTRL_DMA_MODE(BV_SLCD_SCTRL_DMA_MODE__##e)
#define BFM_SLCD_SCTRL_DMA_MODE_V(v)    BM_SLCD_SCTRL_DMA_MODE
#define BP_SLCD_SCTRL_DMA_START         1
#define BM_SLCD_SCTRL_DMA_START         0x2
#define BF_SLCD_SCTRL_DMA_START(v)      (((v) & 0x1) << 1)
#define BFM_SLCD_SCTRL_DMA_START(v)     BM_SLCD_SCTRL_DMA_START
#define BF_SLCD_SCTRL_DMA_START_V(e)    BF_SLCD_SCTRL_DMA_START(BV_SLCD_SCTRL_DMA_START__##e)
#define BFM_SLCD_SCTRL_DMA_START_V(v)   BM_SLCD_SCTRL_DMA_START
#define BP_SLCD_SCTRL_DMA_EN            0
#define BM_SLCD_SCTRL_DMA_EN            0x1
#define BF_SLCD_SCTRL_DMA_EN(v)         (((v) & 0x1) << 0)
#define BFM_SLCD_SCTRL_DMA_EN(v)        BM_SLCD_SCTRL_DMA_EN
#define BF_SLCD_SCTRL_DMA_EN_V(e)       BF_SLCD_SCTRL_DMA_EN(BV_SLCD_SCTRL_DMA_EN__##e)
#define BFM_SLCD_SCTRL_DMA_EN_V(v)      BM_SLCD_SCTRL_DMA_EN

#define REG_SLCD_SSTATE             jz_reg(SLCD_SSTATE)
#define JA_SLCD_SSTATE              (0xb3050000 + 0xa8)
#define JT_SLCD_SSTATE              JIO_8_RW
#define JN_SLCD_SSTATE              SLCD_SSTATE
#define JI_SLCD_SSTATE              
#define BP_SLCD_SSTATE_BUSY         0
#define BM_SLCD_SSTATE_BUSY         0x1
#define BF_SLCD_SSTATE_BUSY(v)      (((v) & 0x1) << 0)
#define BFM_SLCD_SSTATE_BUSY(v)     BM_SLCD_SSTATE_BUSY
#define BF_SLCD_SSTATE_BUSY_V(e)    BF_SLCD_SSTATE_BUSY(BV_SLCD_SSTATE_BUSY__##e)
#define BFM_SLCD_SSTATE_BUSY_V(v)   BM_SLCD_SSTATE_BUSY

#define REG_SLCD_MDATA                  jz_reg(SLCD_MDATA)
#define JA_SLCD_MDATA                   (0xb3050000 + 0xac)
#define JT_SLCD_MDATA                   JIO_32_RW
#define JN_SLCD_MDATA                   SLCD_MDATA
#define JI_SLCD_MDATA                   
#define BP_SLCD_MDATA_RS_COMMAND        31
#define BM_SLCD_MDATA_RS_COMMAND        0x80000000
#define BF_SLCD_MDATA_RS_COMMAND(v)     (((v) & 0x1) << 31)
#define BFM_SLCD_MDATA_RS_COMMAND(v)    BM_SLCD_MDATA_RS_COMMAND
#define BF_SLCD_MDATA_RS_COMMAND_V(e)   BF_SLCD_MDATA_RS_COMMAND(BV_SLCD_MDATA_RS_COMMAND__##e)
#define BFM_SLCD_MDATA_RS_COMMAND_V(v)  BM_SLCD_MDATA_RS_COMMAND

#endif /* __HEADERGEN_SLCD_H__*/
