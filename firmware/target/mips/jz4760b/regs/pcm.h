/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * jz4760b version: 1.0
 * jz4760b authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_PCM_H__
#define __HEADERGEN_PCM_H__

#include "macro.h"

#define REG_PCM_PCTL(_n1)       jz_reg(PCM_PCTL(_n1))
#define JA_PCM_PCTL(_n1)        (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0x0)
#define JT_PCM_PCTL(_n1)        JIO_32_RW
#define JN_PCM_PCTL(_n1)        PCM_PCTL
#define JI_PCM_PCTL(_n1)        (_n1)
#define BP_PCM_PCTL_ERDMA       9
#define BM_PCM_PCTL_ERDMA       0x200
#define BF_PCM_PCTL_ERDMA(v)    (((v) & 0x1) << 9)
#define BFM_PCM_PCTL_ERDMA(v)   BM_PCM_PCTL_ERDMA
#define BF_PCM_PCTL_ERDMA_V(e)  BF_PCM_PCTL_ERDMA(BV_PCM_PCTL_ERDMA__##e)
#define BFM_PCM_PCTL_ERDMA_V(v) BM_PCM_PCTL_ERDMA
#define BP_PCM_PCTL_ETDMA       8
#define BM_PCM_PCTL_ETDMA       0x100
#define BF_PCM_PCTL_ETDMA(v)    (((v) & 0x1) << 8)
#define BFM_PCM_PCTL_ETDMA(v)   BM_PCM_PCTL_ETDMA
#define BF_PCM_PCTL_ETDMA_V(e)  BF_PCM_PCTL_ETDMA(BV_PCM_PCTL_ETDMA__##e)
#define BFM_PCM_PCTL_ETDMA_V(v) BM_PCM_PCTL_ETDMA
#define BP_PCM_PCTL_LSMP        7
#define BM_PCM_PCTL_LSMP        0x80
#define BF_PCM_PCTL_LSMP(v)     (((v) & 0x1) << 7)
#define BFM_PCM_PCTL_LSMP(v)    BM_PCM_PCTL_LSMP
#define BF_PCM_PCTL_LSMP_V(e)   BF_PCM_PCTL_LSMP(BV_PCM_PCTL_LSMP__##e)
#define BFM_PCM_PCTL_LSMP_V(v)  BM_PCM_PCTL_LSMP
#define BP_PCM_PCTL_ERPL        6
#define BM_PCM_PCTL_ERPL        0x40
#define BF_PCM_PCTL_ERPL(v)     (((v) & 0x1) << 6)
#define BFM_PCM_PCTL_ERPL(v)    BM_PCM_PCTL_ERPL
#define BF_PCM_PCTL_ERPL_V(e)   BF_PCM_PCTL_ERPL(BV_PCM_PCTL_ERPL__##e)
#define BFM_PCM_PCTL_ERPL_V(v)  BM_PCM_PCTL_ERPL
#define BP_PCM_PCTL_EREC        5
#define BM_PCM_PCTL_EREC        0x20
#define BF_PCM_PCTL_EREC(v)     (((v) & 0x1) << 5)
#define BFM_PCM_PCTL_EREC(v)    BM_PCM_PCTL_EREC
#define BF_PCM_PCTL_EREC_V(e)   BF_PCM_PCTL_EREC(BV_PCM_PCTL_EREC__##e)
#define BFM_PCM_PCTL_EREC_V(v)  BM_PCM_PCTL_EREC
#define BP_PCM_PCTL_FLUSH       4
#define BM_PCM_PCTL_FLUSH       0x10
#define BF_PCM_PCTL_FLUSH(v)    (((v) & 0x1) << 4)
#define BFM_PCM_PCTL_FLUSH(v)   BM_PCM_PCTL_FLUSH
#define BF_PCM_PCTL_FLUSH_V(e)  BF_PCM_PCTL_FLUSH(BV_PCM_PCTL_FLUSH__##e)
#define BFM_PCM_PCTL_FLUSH_V(v) BM_PCM_PCTL_FLUSH
#define BP_PCM_PCTL_RST         3
#define BM_PCM_PCTL_RST         0x8
#define BF_PCM_PCTL_RST(v)      (((v) & 0x1) << 3)
#define BFM_PCM_PCTL_RST(v)     BM_PCM_PCTL_RST
#define BF_PCM_PCTL_RST_V(e)    BF_PCM_PCTL_RST(BV_PCM_PCTL_RST__##e)
#define BFM_PCM_PCTL_RST_V(v)   BM_PCM_PCTL_RST
#define BP_PCM_PCTL_CLKEN       1
#define BM_PCM_PCTL_CLKEN       0x2
#define BF_PCM_PCTL_CLKEN(v)    (((v) & 0x1) << 1)
#define BFM_PCM_PCTL_CLKEN(v)   BM_PCM_PCTL_CLKEN
#define BF_PCM_PCTL_CLKEN_V(e)  BF_PCM_PCTL_CLKEN(BV_PCM_PCTL_CLKEN__##e)
#define BFM_PCM_PCTL_CLKEN_V(v) BM_PCM_PCTL_CLKEN
#define BP_PCM_PCTL_PCMEN       0
#define BM_PCM_PCTL_PCMEN       0x1
#define BF_PCM_PCTL_PCMEN(v)    (((v) & 0x1) << 0)
#define BFM_PCM_PCTL_PCMEN(v)   BM_PCM_PCTL_PCMEN
#define BF_PCM_PCTL_PCMEN_V(e)  BF_PCM_PCTL_PCMEN(BV_PCM_PCTL_PCMEN__##e)
#define BFM_PCM_PCTL_PCMEN_V(v) BM_PCM_PCTL_PCMEN

#define REG_PCM_PCFG(_n1)               jz_reg(PCM_PCFG(_n1))
#define JA_PCM_PCFG(_n1)                (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0x4)
#define JT_PCM_PCFG(_n1)                JIO_32_RW
#define JN_PCM_PCFG(_n1)                PCM_PCFG
#define JI_PCM_PCFG(_n1)                (_n1)
#define BP_PCM_PCFG_SLOT                13
#define BM_PCM_PCFG_SLOT                0x6000
#define BF_PCM_PCFG_SLOT(v)             (((v) & 0x3) << 13)
#define BFM_PCM_PCFG_SLOT(v)            BM_PCM_PCFG_SLOT
#define BF_PCM_PCFG_SLOT_V(e)           BF_PCM_PCFG_SLOT(BV_PCM_PCFG_SLOT__##e)
#define BFM_PCM_PCFG_SLOT_V(v)          BM_PCM_PCFG_SLOT
#define BP_PCM_PCFG_ISS_16BIT           12
#define BM_PCM_PCFG_ISS_16BIT           0x1000
#define BF_PCM_PCFG_ISS_16BIT(v)        (((v) & 0x1) << 12)
#define BFM_PCM_PCFG_ISS_16BIT(v)       BM_PCM_PCFG_ISS_16BIT
#define BF_PCM_PCFG_ISS_16BIT_V(e)      BF_PCM_PCFG_ISS_16BIT(BV_PCM_PCFG_ISS_16BIT__##e)
#define BFM_PCM_PCFG_ISS_16BIT_V(v)     BM_PCM_PCFG_ISS_16BIT
#define BP_PCM_PCFG_OSS_16BIT           11
#define BM_PCM_PCFG_OSS_16BIT           0x800
#define BF_PCM_PCFG_OSS_16BIT(v)        (((v) & 0x1) << 11)
#define BFM_PCM_PCFG_OSS_16BIT(v)       BM_PCM_PCFG_OSS_16BIT
#define BF_PCM_PCFG_OSS_16BIT_V(e)      BF_PCM_PCFG_OSS_16BIT(BV_PCM_PCFG_OSS_16BIT__##e)
#define BFM_PCM_PCFG_OSS_16BIT_V(v)     BM_PCM_PCFG_OSS_16BIT
#define BP_PCM_PCFG_IMSBPOS             10
#define BM_PCM_PCFG_IMSBPOS             0x400
#define BF_PCM_PCFG_IMSBPOS(v)          (((v) & 0x1) << 10)
#define BFM_PCM_PCFG_IMSBPOS(v)         BM_PCM_PCFG_IMSBPOS
#define BF_PCM_PCFG_IMSBPOS_V(e)        BF_PCM_PCFG_IMSBPOS(BV_PCM_PCFG_IMSBPOS__##e)
#define BFM_PCM_PCFG_IMSBPOS_V(v)       BM_PCM_PCFG_IMSBPOS
#define BP_PCM_PCFG_OMSBPOS             9
#define BM_PCM_PCFG_OMSBPOS             0x200
#define BF_PCM_PCFG_OMSBPOS(v)          (((v) & 0x1) << 9)
#define BFM_PCM_PCFG_OMSBPOS(v)         BM_PCM_PCFG_OMSBPOS
#define BF_PCM_PCFG_OMSBPOS_V(e)        BF_PCM_PCFG_OMSBPOS(BV_PCM_PCFG_OMSBPOS__##e)
#define BFM_PCM_PCFG_OMSBPOS_V(v)       BM_PCM_PCFG_OMSBPOS
#define BP_PCM_PCFG_RFTH                5
#define BM_PCM_PCFG_RFTH                0x1e0
#define BF_PCM_PCFG_RFTH(v)             (((v) & 0xf) << 5)
#define BFM_PCM_PCFG_RFTH(v)            BM_PCM_PCFG_RFTH
#define BF_PCM_PCFG_RFTH_V(e)           BF_PCM_PCFG_RFTH(BV_PCM_PCFG_RFTH__##e)
#define BFM_PCM_PCFG_RFTH_V(v)          BM_PCM_PCFG_RFTH
#define BP_PCM_PCFG_TFTH                1
#define BM_PCM_PCFG_TFTH                0x1e
#define BF_PCM_PCFG_TFTH(v)             (((v) & 0xf) << 1)
#define BFM_PCM_PCFG_TFTH(v)            BM_PCM_PCFG_TFTH
#define BF_PCM_PCFG_TFTH_V(e)           BF_PCM_PCFG_TFTH(BV_PCM_PCFG_TFTH__##e)
#define BFM_PCM_PCFG_TFTH_V(v)          BM_PCM_PCFG_TFTH
#define BP_PCM_PCFG_MODE_SLAVE          0
#define BM_PCM_PCFG_MODE_SLAVE          0x1
#define BF_PCM_PCFG_MODE_SLAVE(v)       (((v) & 0x1) << 0)
#define BFM_PCM_PCFG_MODE_SLAVE(v)      BM_PCM_PCFG_MODE_SLAVE
#define BF_PCM_PCFG_MODE_SLAVE_V(e)     BF_PCM_PCFG_MODE_SLAVE(BV_PCM_PCFG_MODE_SLAVE__##e)
#define BFM_PCM_PCFG_MODE_SLAVE_V(v)    BM_PCM_PCFG_MODE_SLAVE

#define REG_PCM_PDP(_n1)    jz_reg(PCM_PDP(_n1))
#define JA_PCM_PDP(_n1)     (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0x8)
#define JT_PCM_PDP(_n1)     JIO_32_RW
#define JN_PCM_PDP(_n1)     PCM_PDP
#define JI_PCM_PDP(_n1)     (_n1)

#define REG_PCM_PINTC(_n1)      jz_reg(PCM_PINTC(_n1))
#define JA_PCM_PINTC(_n1)       (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0xc)
#define JT_PCM_PINTC(_n1)       JIO_32_RW
#define JN_PCM_PINTC(_n1)       PCM_PINTC
#define JI_PCM_PINTC(_n1)       (_n1)
#define BP_PCM_PINTC_ETFS       3
#define BM_PCM_PINTC_ETFS       0x8
#define BF_PCM_PINTC_ETFS(v)    (((v) & 0x1) << 3)
#define BFM_PCM_PINTC_ETFS(v)   BM_PCM_PINTC_ETFS
#define BF_PCM_PINTC_ETFS_V(e)  BF_PCM_PINTC_ETFS(BV_PCM_PINTC_ETFS__##e)
#define BFM_PCM_PINTC_ETFS_V(v) BM_PCM_PINTC_ETFS
#define BP_PCM_PINTC_ETUR       2
#define BM_PCM_PINTC_ETUR       0x4
#define BF_PCM_PINTC_ETUR(v)    (((v) & 0x1) << 2)
#define BFM_PCM_PINTC_ETUR(v)   BM_PCM_PINTC_ETUR
#define BF_PCM_PINTC_ETUR_V(e)  BF_PCM_PINTC_ETUR(BV_PCM_PINTC_ETUR__##e)
#define BFM_PCM_PINTC_ETUR_V(v) BM_PCM_PINTC_ETUR
#define BP_PCM_PINTC_ERFS       1
#define BM_PCM_PINTC_ERFS       0x2
#define BF_PCM_PINTC_ERFS(v)    (((v) & 0x1) << 1)
#define BFM_PCM_PINTC_ERFS(v)   BM_PCM_PINTC_ERFS
#define BF_PCM_PINTC_ERFS_V(e)  BF_PCM_PINTC_ERFS(BV_PCM_PINTC_ERFS__##e)
#define BFM_PCM_PINTC_ERFS_V(v) BM_PCM_PINTC_ERFS
#define BP_PCM_PINTC_EROR       0
#define BM_PCM_PINTC_EROR       0x1
#define BF_PCM_PINTC_EROR(v)    (((v) & 0x1) << 0)
#define BFM_PCM_PINTC_EROR(v)   BM_PCM_PINTC_EROR
#define BF_PCM_PINTC_EROR_V(e)  BF_PCM_PINTC_EROR(BV_PCM_PINTC_EROR__##e)
#define BFM_PCM_PINTC_EROR_V(v) BM_PCM_PINTC_EROR

#define REG_PCM_PINTS(_n1)      jz_reg(PCM_PINTS(_n1))
#define JA_PCM_PINTS(_n1)       (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0x10)
#define JT_PCM_PINTS(_n1)       JIO_32_RW
#define JN_PCM_PINTS(_n1)       PCM_PINTS
#define JI_PCM_PINTS(_n1)       (_n1)
#define BP_PCM_PINTS_RSTS       14
#define BM_PCM_PINTS_RSTS       0x4000
#define BF_PCM_PINTS_RSTS(v)    (((v) & 0x1) << 14)
#define BFM_PCM_PINTS_RSTS(v)   BM_PCM_PINTS_RSTS
#define BF_PCM_PINTS_RSTS_V(e)  BF_PCM_PINTS_RSTS(BV_PCM_PINTS_RSTS__##e)
#define BFM_PCM_PINTS_RSTS_V(v) BM_PCM_PINTS_RSTS
#define BP_PCM_PINTS_TFL        9
#define BM_PCM_PINTS_TFL        0x3e00
#define BF_PCM_PINTS_TFL(v)     (((v) & 0x1f) << 9)
#define BFM_PCM_PINTS_TFL(v)    BM_PCM_PINTS_TFL
#define BF_PCM_PINTS_TFL_V(e)   BF_PCM_PINTS_TFL(BV_PCM_PINTS_TFL__##e)
#define BFM_PCM_PINTS_TFL_V(v)  BM_PCM_PINTS_TFL
#define BP_PCM_PINTS_TFS        8
#define BM_PCM_PINTS_TFS        0x100
#define BF_PCM_PINTS_TFS(v)     (((v) & 0x1) << 8)
#define BFM_PCM_PINTS_TFS(v)    BM_PCM_PINTS_TFS
#define BF_PCM_PINTS_TFS_V(e)   BF_PCM_PINTS_TFS(BV_PCM_PINTS_TFS__##e)
#define BFM_PCM_PINTS_TFS_V(v)  BM_PCM_PINTS_TFS
#define BP_PCM_PINTS_TUR        7
#define BM_PCM_PINTS_TUR        0x80
#define BF_PCM_PINTS_TUR(v)     (((v) & 0x1) << 7)
#define BFM_PCM_PINTS_TUR(v)    BM_PCM_PINTS_TUR
#define BF_PCM_PINTS_TUR_V(e)   BF_PCM_PINTS_TUR(BV_PCM_PINTS_TUR__##e)
#define BFM_PCM_PINTS_TUR_V(v)  BM_PCM_PINTS_TUR
#define BP_PCM_PINTS_RFL        2
#define BM_PCM_PINTS_RFL        0x7c
#define BF_PCM_PINTS_RFL(v)     (((v) & 0x1f) << 2)
#define BFM_PCM_PINTS_RFL(v)    BM_PCM_PINTS_RFL
#define BF_PCM_PINTS_RFL_V(e)   BF_PCM_PINTS_RFL(BV_PCM_PINTS_RFL__##e)
#define BFM_PCM_PINTS_RFL_V(v)  BM_PCM_PINTS_RFL
#define BP_PCM_PINTS_RFS        1
#define BM_PCM_PINTS_RFS        0x2
#define BF_PCM_PINTS_RFS(v)     (((v) & 0x1) << 1)
#define BFM_PCM_PINTS_RFS(v)    BM_PCM_PINTS_RFS
#define BF_PCM_PINTS_RFS_V(e)   BF_PCM_PINTS_RFS(BV_PCM_PINTS_RFS__##e)
#define BFM_PCM_PINTS_RFS_V(v)  BM_PCM_PINTS_RFS
#define BP_PCM_PINTS_ROR        0
#define BM_PCM_PINTS_ROR        0x1
#define BF_PCM_PINTS_ROR(v)     (((v) & 0x1) << 0)
#define BFM_PCM_PINTS_ROR(v)    BM_PCM_PINTS_ROR
#define BF_PCM_PINTS_ROR_V(e)   BF_PCM_PINTS_ROR(BV_PCM_PINTS_ROR__##e)
#define BFM_PCM_PINTS_ROR_V(v)  BM_PCM_PINTS_ROR

#define REG_PCM_PDIV(_n1)           jz_reg(PCM_PDIV(_n1))
#define JA_PCM_PDIV(_n1)            (((_n1) == 0 ? 0xb0071000 : 0xb0074000) + 0x14)
#define JT_PCM_PDIV(_n1)            JIO_32_RW
#define JN_PCM_PDIV(_n1)            PCM_PDIV
#define JI_PCM_PDIV(_n1)            (_n1)
#define BP_PCM_PDIV_SYNL            11
#define BM_PCM_PDIV_SYNL            0x1f800
#define BF_PCM_PDIV_SYNL(v)         (((v) & 0x3f) << 11)
#define BFM_PCM_PDIV_SYNL(v)        BM_PCM_PDIV_SYNL
#define BF_PCM_PDIV_SYNL_V(e)       BF_PCM_PDIV_SYNL(BV_PCM_PDIV_SYNL__##e)
#define BFM_PCM_PDIV_SYNL_V(v)      BM_PCM_PDIV_SYNL
#define BP_PCM_PDIV_SYNDIV          6
#define BM_PCM_PDIV_SYNDIV          0x7c0
#define BF_PCM_PDIV_SYNDIV(v)       (((v) & 0x1f) << 6)
#define BFM_PCM_PDIV_SYNDIV(v)      BM_PCM_PDIV_SYNDIV
#define BF_PCM_PDIV_SYNDIV_V(e)     BF_PCM_PDIV_SYNDIV(BV_PCM_PDIV_SYNDIV__##e)
#define BFM_PCM_PDIV_SYNDIV_V(v)    BM_PCM_PDIV_SYNDIV
#define BP_PCM_PDIV_CLKDIV          0
#define BM_PCM_PDIV_CLKDIV          0x3f
#define BF_PCM_PDIV_CLKDIV(v)       (((v) & 0x3f) << 0)
#define BFM_PCM_PDIV_CLKDIV(v)      BM_PCM_PDIV_CLKDIV
#define BF_PCM_PDIV_CLKDIV_V(e)     BF_PCM_PDIV_CLKDIV(BV_PCM_PDIV_CLKDIV__##e)
#define BFM_PCM_PDIV_CLKDIV_V(v)    BM_PCM_PDIV_CLKDIV

#endif /* __HEADERGEN_PCM_H__*/
