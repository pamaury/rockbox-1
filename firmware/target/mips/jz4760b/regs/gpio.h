/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * jz4760b version: 1.0
 * jz4760b authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_GPIO_H__
#define __HEADERGEN_GPIO_H__

#include "macro.h"

#define REG_GPIO_IN(_n1)    jz_reg(GPIO_IN(_n1))
#define JA_GPIO_IN(_n1)     (0xb0010000 + ((_n1))*0x100 + 0x00)
#define JT_GPIO_IN(_n1)     JIO_32_RW
#define JN_GPIO_IN(_n1)     GPIO_IN
#define JI_GPIO_IN(_n1)     (_n1)

#define REG_GPIO_OUT(_n1)       jz_reg(GPIO_OUT(_n1))
#define JA_GPIO_OUT(_n1)        (0xb0010000 + ((_n1))*0x100 + 0x10)
#define JT_GPIO_OUT(_n1)        JIO_32_RW
#define JN_GPIO_OUT(_n1)        GPIO_OUT
#define JI_GPIO_OUT(_n1)        (_n1)
#define REG_GPIO_OUT_SET(_n1)   jz_reg(GPIO_OUT_SET(_n1))
#define JA_GPIO_OUT_SET(_n1)    (JA_GPIO_OUT(_n1) + 0x4)
#define JT_GPIO_OUT_SET(_n1)    JIO_32_WO
#define JN_GPIO_OUT_SET(_n1)    GPIO_OUT
#define JI_GPIO_OUT_SET(_n1)    (_n1)
#define REG_GPIO_OUT_CLR(_n1)   jz_reg(GPIO_OUT_CLR(_n1))
#define JA_GPIO_OUT_CLR(_n1)    (JA_GPIO_OUT(_n1) + 0x8)
#define JT_GPIO_OUT_CLR(_n1)    JIO_32_WO
#define JN_GPIO_OUT_CLR(_n1)    GPIO_OUT
#define JI_GPIO_OUT_CLR(_n1)    (_n1)

#define REG_GPIO_FLGC(_n1)  jz_reg(GPIO_FLGC(_n1))
#define JA_GPIO_FLGC(_n1)   (0xb0010000 + ((_n1))*0x100 + 0x14)
#define JT_GPIO_FLGC(_n1)   JIO_32_RW
#define JN_GPIO_FLGC(_n1)   GPIO_FLGC
#define JI_GPIO_FLGC(_n1)   (_n1)

#define REG_GPIO_MASK(_n1)      jz_reg(GPIO_MASK(_n1))
#define JA_GPIO_MASK(_n1)       (0xb0010000 + ((_n1))*0x100 + 0x20)
#define JT_GPIO_MASK(_n1)       JIO_32_RW
#define JN_GPIO_MASK(_n1)       GPIO_MASK
#define JI_GPIO_MASK(_n1)       (_n1)
#define REG_GPIO_MASK_SET(_n1)  jz_reg(GPIO_MASK_SET(_n1))
#define JA_GPIO_MASK_SET(_n1)   (JA_GPIO_MASK(_n1) + 0x4)
#define JT_GPIO_MASK_SET(_n1)   JIO_32_WO
#define JN_GPIO_MASK_SET(_n1)   GPIO_MASK
#define JI_GPIO_MASK_SET(_n1)   (_n1)
#define REG_GPIO_MASK_CLR(_n1)  jz_reg(GPIO_MASK_CLR(_n1))
#define JA_GPIO_MASK_CLR(_n1)   (JA_GPIO_MASK(_n1) + 0x8)
#define JT_GPIO_MASK_CLR(_n1)   JIO_32_WO
#define JN_GPIO_MASK_CLR(_n1)   GPIO_MASK
#define JI_GPIO_MASK_CLR(_n1)   (_n1)

#define REG_GPIO_PULL(_n1)      jz_reg(GPIO_PULL(_n1))
#define JA_GPIO_PULL(_n1)       (0xb0010000 + ((_n1))*0x100 + 0x30)
#define JT_GPIO_PULL(_n1)       JIO_32_RW
#define JN_GPIO_PULL(_n1)       GPIO_PULL
#define JI_GPIO_PULL(_n1)       (_n1)
#define REG_GPIO_PULL_SET(_n1)  jz_reg(GPIO_PULL_SET(_n1))
#define JA_GPIO_PULL_SET(_n1)   (JA_GPIO_PULL(_n1) + 0x4)
#define JT_GPIO_PULL_SET(_n1)   JIO_32_WO
#define JN_GPIO_PULL_SET(_n1)   GPIO_PULL
#define JI_GPIO_PULL_SET(_n1)   (_n1)
#define REG_GPIO_PULL_CLR(_n1)  jz_reg(GPIO_PULL_CLR(_n1))
#define JA_GPIO_PULL_CLR(_n1)   (JA_GPIO_PULL(_n1) + 0x8)
#define JT_GPIO_PULL_CLR(_n1)   JIO_32_WO
#define JN_GPIO_PULL_CLR(_n1)   GPIO_PULL
#define JI_GPIO_PULL_CLR(_n1)   (_n1)

#define REG_GPIO_FUNCTION(_n1)      jz_reg(GPIO_FUNCTION(_n1))
#define JA_GPIO_FUNCTION(_n1)       (0xb0010000 + ((_n1))*0x100 + 0x40)
#define JT_GPIO_FUNCTION(_n1)       JIO_32_RW
#define JN_GPIO_FUNCTION(_n1)       GPIO_FUNCTION
#define JI_GPIO_FUNCTION(_n1)       (_n1)
#define REG_GPIO_FUNCTION_SET(_n1)  jz_reg(GPIO_FUNCTION_SET(_n1))
#define JA_GPIO_FUNCTION_SET(_n1)   (JA_GPIO_FUNCTION(_n1) + 0x4)
#define JT_GPIO_FUNCTION_SET(_n1)   JIO_32_WO
#define JN_GPIO_FUNCTION_SET(_n1)   GPIO_FUNCTION
#define JI_GPIO_FUNCTION_SET(_n1)   (_n1)
#define REG_GPIO_FUNCTION_CLR(_n1)  jz_reg(GPIO_FUNCTION_CLR(_n1))
#define JA_GPIO_FUNCTION_CLR(_n1)   (JA_GPIO_FUNCTION(_n1) + 0x8)
#define JT_GPIO_FUNCTION_CLR(_n1)   JIO_32_WO
#define JN_GPIO_FUNCTION_CLR(_n1)   GPIO_FUNCTION
#define JI_GPIO_FUNCTION_CLR(_n1)   (_n1)

#define REG_GPIO_SELECT(_n1)        jz_reg(GPIO_SELECT(_n1))
#define JA_GPIO_SELECT(_n1)         (0xb0010000 + ((_n1))*0x100 + 0x50)
#define JT_GPIO_SELECT(_n1)         JIO_32_RW
#define JN_GPIO_SELECT(_n1)         GPIO_SELECT
#define JI_GPIO_SELECT(_n1)         (_n1)
#define REG_GPIO_SELECT_SET(_n1)    jz_reg(GPIO_SELECT_SET(_n1))
#define JA_GPIO_SELECT_SET(_n1)     (JA_GPIO_SELECT(_n1) + 0x4)
#define JT_GPIO_SELECT_SET(_n1)     JIO_32_WO
#define JN_GPIO_SELECT_SET(_n1)     GPIO_SELECT
#define JI_GPIO_SELECT_SET(_n1)     (_n1)
#define REG_GPIO_SELECT_CLR(_n1)    jz_reg(GPIO_SELECT_CLR(_n1))
#define JA_GPIO_SELECT_CLR(_n1)     (JA_GPIO_SELECT(_n1) + 0x8)
#define JT_GPIO_SELECT_CLR(_n1)     JIO_32_WO
#define JN_GPIO_SELECT_CLR(_n1)     GPIO_SELECT
#define JI_GPIO_SELECT_CLR(_n1)     (_n1)

#define REG_GPIO_DIR(_n1)       jz_reg(GPIO_DIR(_n1))
#define JA_GPIO_DIR(_n1)        (0xb0010000 + ((_n1))*0x100 + 0x60)
#define JT_GPIO_DIR(_n1)        JIO_32_RW
#define JN_GPIO_DIR(_n1)        GPIO_DIR
#define JI_GPIO_DIR(_n1)        (_n1)
#define REG_GPIO_DIR_SET(_n1)   jz_reg(GPIO_DIR_SET(_n1))
#define JA_GPIO_DIR_SET(_n1)    (JA_GPIO_DIR(_n1) + 0x4)
#define JT_GPIO_DIR_SET(_n1)    JIO_32_WO
#define JN_GPIO_DIR_SET(_n1)    GPIO_DIR
#define JI_GPIO_DIR_SET(_n1)    (_n1)
#define REG_GPIO_DIR_CLR(_n1)   jz_reg(GPIO_DIR_CLR(_n1))
#define JA_GPIO_DIR_CLR(_n1)    (JA_GPIO_DIR(_n1) + 0x8)
#define JT_GPIO_DIR_CLR(_n1)    JIO_32_WO
#define JN_GPIO_DIR_CLR(_n1)    GPIO_DIR
#define JI_GPIO_DIR_CLR(_n1)    (_n1)

#define REG_GPIO_TRIGGER(_n1)       jz_reg(GPIO_TRIGGER(_n1))
#define JA_GPIO_TRIGGER(_n1)        (0xb0010000 + ((_n1))*0x100 + 0x70)
#define JT_GPIO_TRIGGER(_n1)        JIO_32_RW
#define JN_GPIO_TRIGGER(_n1)        GPIO_TRIGGER
#define JI_GPIO_TRIGGER(_n1)        (_n1)
#define REG_GPIO_TRIGGER_SET(_n1)   jz_reg(GPIO_TRIGGER_SET(_n1))
#define JA_GPIO_TRIGGER_SET(_n1)    (JA_GPIO_TRIGGER(_n1) + 0x4)
#define JT_GPIO_TRIGGER_SET(_n1)    JIO_32_WO
#define JN_GPIO_TRIGGER_SET(_n1)    GPIO_TRIGGER
#define JI_GPIO_TRIGGER_SET(_n1)    (_n1)
#define REG_GPIO_TRIGGER_CLR(_n1)   jz_reg(GPIO_TRIGGER_CLR(_n1))
#define JA_GPIO_TRIGGER_CLR(_n1)    (JA_GPIO_TRIGGER(_n1) + 0x8)
#define JT_GPIO_TRIGGER_CLR(_n1)    JIO_32_WO
#define JN_GPIO_TRIGGER_CLR(_n1)    GPIO_TRIGGER
#define JI_GPIO_TRIGGER_CLR(_n1)    (_n1)

#define REG_GPIO_FLG(_n1)   jz_reg(GPIO_FLG(_n1))
#define JA_GPIO_FLG(_n1)    (0xb0010000 + ((_n1))*0x100 + 0x80)
#define JT_GPIO_FLG(_n1)    JIO_32_RW
#define JN_GPIO_FLG(_n1)    GPIO_FLG
#define JI_GPIO_FLG(_n1)    (_n1)

#define REG_GPIO_DRIVE0(_n1)        jz_reg(GPIO_DRIVE0(_n1))
#define JA_GPIO_DRIVE0(_n1)         (0xb0010000 + ((_n1))*0x100 + 0xc0)
#define JT_GPIO_DRIVE0(_n1)         JIO_32_RW
#define JN_GPIO_DRIVE0(_n1)         GPIO_DRIVE0
#define JI_GPIO_DRIVE0(_n1)         (_n1)
#define REG_GPIO_DRIVE0_SET(_n1)    jz_reg(GPIO_DRIVE0_SET(_n1))
#define JA_GPIO_DRIVE0_SET(_n1)     (JA_GPIO_DRIVE0(_n1) + 0x4)
#define JT_GPIO_DRIVE0_SET(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE0_SET(_n1)     GPIO_DRIVE0
#define JI_GPIO_DRIVE0_SET(_n1)     (_n1)
#define REG_GPIO_DRIVE0_CLR(_n1)    jz_reg(GPIO_DRIVE0_CLR(_n1))
#define JA_GPIO_DRIVE0_CLR(_n1)     (JA_GPIO_DRIVE0(_n1) + 0x8)
#define JT_GPIO_DRIVE0_CLR(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE0_CLR(_n1)     GPIO_DRIVE0
#define JI_GPIO_DRIVE0_CLR(_n1)     (_n1)

#define REG_GPIO_DRIVE1(_n1)        jz_reg(GPIO_DRIVE1(_n1))
#define JA_GPIO_DRIVE1(_n1)         (0xb0010000 + ((_n1))*0x100 + 0xd0)
#define JT_GPIO_DRIVE1(_n1)         JIO_32_RW
#define JN_GPIO_DRIVE1(_n1)         GPIO_DRIVE1
#define JI_GPIO_DRIVE1(_n1)         (_n1)
#define REG_GPIO_DRIVE1_SET(_n1)    jz_reg(GPIO_DRIVE1_SET(_n1))
#define JA_GPIO_DRIVE1_SET(_n1)     (JA_GPIO_DRIVE1(_n1) + 0x4)
#define JT_GPIO_DRIVE1_SET(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE1_SET(_n1)     GPIO_DRIVE1
#define JI_GPIO_DRIVE1_SET(_n1)     (_n1)
#define REG_GPIO_DRIVE1_CLR(_n1)    jz_reg(GPIO_DRIVE1_CLR(_n1))
#define JA_GPIO_DRIVE1_CLR(_n1)     (JA_GPIO_DRIVE1(_n1) + 0x8)
#define JT_GPIO_DRIVE1_CLR(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE1_CLR(_n1)     GPIO_DRIVE1
#define JI_GPIO_DRIVE1_CLR(_n1)     (_n1)

#define REG_GPIO_DRIVE2(_n1)        jz_reg(GPIO_DRIVE2(_n1))
#define JA_GPIO_DRIVE2(_n1)         (0xb0010000 + ((_n1))*0x100 + 0xe0)
#define JT_GPIO_DRIVE2(_n1)         JIO_32_RW
#define JN_GPIO_DRIVE2(_n1)         GPIO_DRIVE2
#define JI_GPIO_DRIVE2(_n1)         (_n1)
#define REG_GPIO_DRIVE2_SET(_n1)    jz_reg(GPIO_DRIVE2_SET(_n1))
#define JA_GPIO_DRIVE2_SET(_n1)     (JA_GPIO_DRIVE2(_n1) + 0x4)
#define JT_GPIO_DRIVE2_SET(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE2_SET(_n1)     GPIO_DRIVE2
#define JI_GPIO_DRIVE2_SET(_n1)     (_n1)
#define REG_GPIO_DRIVE2_CLR(_n1)    jz_reg(GPIO_DRIVE2_CLR(_n1))
#define JA_GPIO_DRIVE2_CLR(_n1)     (JA_GPIO_DRIVE2(_n1) + 0x8)
#define JT_GPIO_DRIVE2_CLR(_n1)     JIO_32_WO
#define JN_GPIO_DRIVE2_CLR(_n1)     GPIO_DRIVE2
#define JI_GPIO_DRIVE2_CLR(_n1)     (_n1)

#define REG_GPIO_SLEW(_n1)      jz_reg(GPIO_SLEW(_n1))
#define JA_GPIO_SLEW(_n1)       (0xb0010000 + ((_n1))*0x100 + 0xf0)
#define JT_GPIO_SLEW(_n1)       JIO_32_RW
#define JN_GPIO_SLEW(_n1)       GPIO_SLEW
#define JI_GPIO_SLEW(_n1)       (_n1)
#define REG_GPIO_SLEW_SET(_n1)  jz_reg(GPIO_SLEW_SET(_n1))
#define JA_GPIO_SLEW_SET(_n1)   (JA_GPIO_SLEW(_n1) + 0x4)
#define JT_GPIO_SLEW_SET(_n1)   JIO_32_WO
#define JN_GPIO_SLEW_SET(_n1)   GPIO_SLEW
#define JI_GPIO_SLEW_SET(_n1)   (_n1)
#define REG_GPIO_SLEW_CLR(_n1)  jz_reg(GPIO_SLEW_CLR(_n1))
#define JA_GPIO_SLEW_CLR(_n1)   (JA_GPIO_SLEW(_n1) + 0x8)
#define JT_GPIO_SLEW_CLR(_n1)   JIO_32_WO
#define JN_GPIO_SLEW_CLR(_n1)   GPIO_SLEW
#define JI_GPIO_SLEW_CLR(_n1)   (_n1)

#endif /* __HEADERGEN_GPIO_H__*/
