/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 3.0.0
 * jz4760b version: 1.0
 * jz4760b authors: Amaury Pouly
 *
 * Copyright (C) 2015 by the authors
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN_TCU_H__
#define __HEADERGEN_TCU_H__

#include "macro.h"

#define REG_TCU_ENABLE              jz_reg(TCU_ENABLE)
#define JA_TCU_ENABLE               (0xb0002000 + 0x10)
#define JT_TCU_ENABLE               JIO_16_RW
#define JN_TCU_ENABLE               TCU_ENABLE
#define JI_TCU_ENABLE               
#define REG_TCU_ENABLE_SET          jz_reg(TCU_ENABLE_SET)
#define JA_TCU_ENABLE_SET           (JA_TCU_ENABLE + 0x4)
#define JT_TCU_ENABLE_SET           JIO_16_WO
#define JN_TCU_ENABLE_SET           TCU_ENABLE
#define JI_TCU_ENABLE_SET           
#define REG_TCU_ENABLE_CLR          jz_reg(TCU_ENABLE_CLR)
#define JA_TCU_ENABLE_CLR           (JA_TCU_ENABLE + 0x8)
#define JT_TCU_ENABLE_CLR           JIO_16_WO
#define JN_TCU_ENABLE_CLR           TCU_ENABLE
#define JI_TCU_ENABLE_CLR           
#define BP_TCU_ENABLE_OST           15
#define BM_TCU_ENABLE_OST           0x8000
#define BF_TCU_ENABLE_OST(v)        (((v) & 0x1) << 15)
#define BFM_TCU_ENABLE_OST(v)       BM_TCU_ENABLE_OST
#define BF_TCU_ENABLE_OST_V(e)      BF_TCU_ENABLE_OST(BV_TCU_ENABLE_OST__##e)
#define BFM_TCU_ENABLE_OST_V(v)     BM_TCU_ENABLE_OST
#define BP_TCU_ENABLE_TIMER         0
#define BM_TCU_ENABLE_TIMER         0xff
#define BF_TCU_ENABLE_TIMER(v)      (((v) & 0xff) << 0)
#define BFM_TCU_ENABLE_TIMER(v)     BM_TCU_ENABLE_TIMER
#define BF_TCU_ENABLE_TIMER_V(e)    BF_TCU_ENABLE_TIMER(BV_TCU_ENABLE_TIMER__##e)
#define BFM_TCU_ENABLE_TIMER_V(v)   BM_TCU_ENABLE_TIMER

#define REG_TCU_STOP            jz_reg(TCU_STOP)
#define JA_TCU_STOP             (0xb0002000 + 0x1c)
#define JT_TCU_STOP             JIO_32_RW
#define JN_TCU_STOP             TCU_STOP
#define JI_TCU_STOP             
#define REG_TCU_STOP_SET        jz_reg(TCU_STOP_SET)
#define JA_TCU_STOP_SET         (JA_TCU_STOP + 0x10)
#define JT_TCU_STOP_SET         JIO_32_WO
#define JN_TCU_STOP_SET         TCU_STOP
#define JI_TCU_STOP_SET         
#define REG_TCU_STOP_CLR        jz_reg(TCU_STOP_CLR)
#define JA_TCU_STOP_CLR         (JA_TCU_STOP + 0x20)
#define JT_TCU_STOP_CLR         JIO_32_WO
#define JN_TCU_STOP_CLR         TCU_STOP
#define JI_TCU_STOP_CLR         
#define BP_TCU_STOP_WDT         16
#define BM_TCU_STOP_WDT         0x10000
#define BF_TCU_STOP_WDT(v)      (((v) & 0x1) << 16)
#define BFM_TCU_STOP_WDT(v)     BM_TCU_STOP_WDT
#define BF_TCU_STOP_WDT_V(e)    BF_TCU_STOP_WDT(BV_TCU_STOP_WDT__##e)
#define BFM_TCU_STOP_WDT_V(v)   BM_TCU_STOP_WDT
#define BP_TCU_STOP_OST         15
#define BM_TCU_STOP_OST         0x8000
#define BF_TCU_STOP_OST(v)      (((v) & 0x1) << 15)
#define BFM_TCU_STOP_OST(v)     BM_TCU_STOP_OST
#define BF_TCU_STOP_OST_V(e)    BF_TCU_STOP_OST(BV_TCU_STOP_OST__##e)
#define BFM_TCU_STOP_OST_V(v)   BM_TCU_STOP_OST
#define BP_TCU_STOP_TIMER       0
#define BM_TCU_STOP_TIMER       0xff
#define BF_TCU_STOP_TIMER(v)    (((v) & 0xff) << 0)
#define BFM_TCU_STOP_TIMER(v)   BM_TCU_STOP_TIMER
#define BF_TCU_STOP_TIMER_V(e)  BF_TCU_STOP_TIMER(BV_TCU_STOP_TIMER__##e)
#define BFM_TCU_STOP_TIMER_V(v) BM_TCU_STOP_TIMER

#define REG_TCU_FLAG            jz_reg(TCU_FLAG)
#define JA_TCU_FLAG             (0xb0002000 + 0x20)
#define JT_TCU_FLAG             JIO_32_RW
#define JN_TCU_FLAG             TCU_FLAG
#define JI_TCU_FLAG             
#define REG_TCU_FLAG_SET        jz_reg(TCU_FLAG_SET)
#define JA_TCU_FLAG_SET         (JA_TCU_FLAG + 0x4)
#define JT_TCU_FLAG_SET         JIO_32_WO
#define JN_TCU_FLAG_SET         TCU_FLAG
#define JI_TCU_FLAG_SET         
#define REG_TCU_FLAG_CLR        jz_reg(TCU_FLAG_CLR)
#define JA_TCU_FLAG_CLR         (JA_TCU_FLAG + 0x8)
#define JT_TCU_FLAG_CLR         JIO_32_WO
#define JN_TCU_FLAG_CLR         TCU_FLAG
#define JI_TCU_FLAG_CLR         
#define BP_TCU_FLAG_HALF        16
#define BM_TCU_FLAG_HALF        0xff0000
#define BF_TCU_FLAG_HALF(v)     (((v) & 0xff) << 16)
#define BFM_TCU_FLAG_HALF(v)    BM_TCU_FLAG_HALF
#define BF_TCU_FLAG_HALF_V(e)   BF_TCU_FLAG_HALF(BV_TCU_FLAG_HALF__##e)
#define BFM_TCU_FLAG_HALF_V(v)  BM_TCU_FLAG_HALF
#define BP_TCU_FLAG_OST         15
#define BM_TCU_FLAG_OST         0x8000
#define BF_TCU_FLAG_OST(v)      (((v) & 0x1) << 15)
#define BFM_TCU_FLAG_OST(v)     BM_TCU_FLAG_OST
#define BF_TCU_FLAG_OST_V(e)    BF_TCU_FLAG_OST(BV_TCU_FLAG_OST__##e)
#define BFM_TCU_FLAG_OST_V(v)   BM_TCU_FLAG_OST
#define BP_TCU_FLAG_FULL        0
#define BM_TCU_FLAG_FULL        0xff
#define BF_TCU_FLAG_FULL(v)     (((v) & 0xff) << 0)
#define BFM_TCU_FLAG_FULL(v)    BM_TCU_FLAG_FULL
#define BF_TCU_FLAG_FULL_V(e)   BF_TCU_FLAG_FULL(BV_TCU_FLAG_FULL__##e)
#define BFM_TCU_FLAG_FULL_V(v)  BM_TCU_FLAG_FULL

#define REG_TCU_TMR             jz_reg(TCU_TMR)
#define JA_TCU_TMR              (0xb0002000 + 0x30)
#define JT_TCU_TMR              JIO_32_RW
#define JN_TCU_TMR              TCU_TMR
#define JI_TCU_TMR              
#define REG_TCU_TMR_SET         jz_reg(TCU_TMR_SET)
#define JA_TCU_TMR_SET          (JA_TCU_TMR + 0x4)
#define JT_TCU_TMR_SET          JIO_32_WO
#define JN_TCU_TMR_SET          TCU_TMR
#define JI_TCU_TMR_SET          
#define REG_TCU_TMR_CLR         jz_reg(TCU_TMR_CLR)
#define JA_TCU_TMR_CLR          (JA_TCU_TMR + 0x8)
#define JT_TCU_TMR_CLR          JIO_32_WO
#define JN_TCU_TMR_CLR          TCU_TMR
#define JI_TCU_TMR_CLR          
#define BP_TCU_TMR_HALF         16
#define BM_TCU_TMR_HALF         0xff0000
#define BF_TCU_TMR_HALF(v)      (((v) & 0xff) << 16)
#define BFM_TCU_TMR_HALF(v)     BM_TCU_TMR_HALF
#define BF_TCU_TMR_HALF_V(e)    BF_TCU_TMR_HALF(BV_TCU_TMR_HALF__##e)
#define BFM_TCU_TMR_HALF_V(v)   BM_TCU_TMR_HALF
#define BP_TCU_TMR_OST          15
#define BM_TCU_TMR_OST          0x8000
#define BF_TCU_TMR_OST(v)       (((v) & 0x1) << 15)
#define BFM_TCU_TMR_OST(v)      BM_TCU_TMR_OST
#define BF_TCU_TMR_OST_V(e)     BF_TCU_TMR_OST(BV_TCU_TMR_OST__##e)
#define BFM_TCU_TMR_OST_V(v)    BM_TCU_TMR_OST
#define BP_TCU_TMR_FULL         0
#define BM_TCU_TMR_FULL         0xff
#define BF_TCU_TMR_FULL(v)      (((v) & 0xff) << 0)
#define BFM_TCU_TMR_FULL(v)     BM_TCU_TMR_FULL
#define BF_TCU_TMR_FULL_V(e)    BF_TCU_TMR_FULL(BV_TCU_TMR_FULL__##e)
#define BFM_TCU_TMR_FULL_V(v)   BM_TCU_TMR_FULL

#define REG_TCU_DATA_FULL(_n1)          jz_reg(TCU_DATA_FULL(_n1))
#define JA_TCU_DATA_FULL(_n1)           (0xb0002000 + ((_n1)) * 0x10 + 0x40)
#define JT_TCU_DATA_FULL(_n1)           JIO_16_RW
#define JN_TCU_DATA_FULL(_n1)           TCU_DATA_FULL
#define JI_TCU_DATA_FULL(_n1)           (_n1)
#define BP_TCU_DATA_FULL_COUNT          0
#define BM_TCU_DATA_FULL_COUNT          0xffff
#define BF_TCU_DATA_FULL_COUNT(v)       (((v) & 0xffff) << 0)
#define BFM_TCU_DATA_FULL_COUNT(v)      BM_TCU_DATA_FULL_COUNT
#define BF_TCU_DATA_FULL_COUNT_V(e)     BF_TCU_DATA_FULL_COUNT(BV_TCU_DATA_FULL_COUNT__##e)
#define BFM_TCU_DATA_FULL_COUNT_V(v)    BM_TCU_DATA_FULL_COUNT

#define REG_TCU_DATA_HALF(_n1)          jz_reg(TCU_DATA_HALF(_n1))
#define JA_TCU_DATA_HALF(_n1)           (0xb0002000 + ((_n1)) * 0x10 + 0x44)
#define JT_TCU_DATA_HALF(_n1)           JIO_16_RW
#define JN_TCU_DATA_HALF(_n1)           TCU_DATA_HALF
#define JI_TCU_DATA_HALF(_n1)           (_n1)
#define BP_TCU_DATA_HALF_COUNT          0
#define BM_TCU_DATA_HALF_COUNT          0xffff
#define BF_TCU_DATA_HALF_COUNT(v)       (((v) & 0xffff) << 0)
#define BFM_TCU_DATA_HALF_COUNT(v)      BM_TCU_DATA_HALF_COUNT
#define BF_TCU_DATA_HALF_COUNT_V(e)     BF_TCU_DATA_HALF_COUNT(BV_TCU_DATA_HALF_COUNT__##e)
#define BFM_TCU_DATA_HALF_COUNT_V(v)    BM_TCU_DATA_HALF_COUNT

#define REG_TCU_COUNT(_n1)          jz_reg(TCU_COUNT(_n1))
#define JA_TCU_COUNT(_n1)           (0xb0002000 + ((_n1)) * 0x10 + 0x48)
#define JT_TCU_COUNT(_n1)           JIO_16_RW
#define JN_TCU_COUNT(_n1)           TCU_COUNT
#define JI_TCU_COUNT(_n1)           (_n1)
#define BP_TCU_COUNT_COUNT          0
#define BM_TCU_COUNT_COUNT          0xffff
#define BF_TCU_COUNT_COUNT(v)       (((v) & 0xffff) << 0)
#define BFM_TCU_COUNT_COUNT(v)      BM_TCU_COUNT_COUNT
#define BF_TCU_COUNT_COUNT_V(e)     BF_TCU_COUNT_COUNT(BV_TCU_COUNT_COUNT__##e)
#define BFM_TCU_COUNT_COUNT_V(v)    BM_TCU_COUNT_COUNT

#define REG_TCU_CTRL(_n1)               jz_reg(TCU_CTRL(_n1))
#define JA_TCU_CTRL(_n1)                (0xb0002000 + ((_n1)) * 0x10 + 0x4c)
#define JT_TCU_CTRL(_n1)                JIO_16_RW
#define JN_TCU_CTRL(_n1)                TCU_CTRL
#define JI_TCU_CTRL(_n1)                (_n1)
#define BP_TCU_CTRL_CLEAR_TO_ZERO       10
#define BM_TCU_CTRL_CLEAR_TO_ZERO       0x400
#define BF_TCU_CTRL_CLEAR_TO_ZERO(v)    (((v) & 0x1) << 10)
#define BFM_TCU_CTRL_CLEAR_TO_ZERO(v)   BM_TCU_CTRL_CLEAR_TO_ZERO
#define BF_TCU_CTRL_CLEAR_TO_ZERO_V(e)  BF_TCU_CTRL_CLEAR_TO_ZERO(BV_TCU_CTRL_CLEAR_TO_ZERO__##e)
#define BFM_TCU_CTRL_CLEAR_TO_ZERO_V(v) BM_TCU_CTRL_CLEAR_TO_ZERO
#define BP_TCU_CTRL_SHUTDOWN            9
#define BM_TCU_CTRL_SHUTDOWN            0x200
#define BV_TCU_CTRL_SHUTDOWN__GRACEFUL  0x0
#define BV_TCU_CTRL_SHUTDOWN__ABRUPT    0x1
#define BF_TCU_CTRL_SHUTDOWN(v)         (((v) & 0x1) << 9)
#define BFM_TCU_CTRL_SHUTDOWN(v)        BM_TCU_CTRL_SHUTDOWN
#define BF_TCU_CTRL_SHUTDOWN_V(e)       BF_TCU_CTRL_SHUTDOWN(BV_TCU_CTRL_SHUTDOWN__##e)
#define BFM_TCU_CTRL_SHUTDOWN_V(v)      BM_TCU_CTRL_SHUTDOWN
#define BP_TCU_CTRL_PMW_INIT_LVL        8
#define BM_TCU_CTRL_PMW_INIT_LVL        0x100
#define BF_TCU_CTRL_PMW_INIT_LVL(v)     (((v) & 0x1) << 8)
#define BFM_TCU_CTRL_PMW_INIT_LVL(v)    BM_TCU_CTRL_PMW_INIT_LVL
#define BF_TCU_CTRL_PMW_INIT_LVL_V(e)   BF_TCU_CTRL_PMW_INIT_LVL(BV_TCU_CTRL_PMW_INIT_LVL__##e)
#define BFM_TCU_CTRL_PMW_INIT_LVL_V(v)  BM_TCU_CTRL_PMW_INIT_LVL
#define BP_TCU_CTRL_PWM_EN              7
#define BM_TCU_CTRL_PWM_EN              0x80
#define BF_TCU_CTRL_PWM_EN(v)           (((v) & 0x1) << 7)
#define BFM_TCU_CTRL_PWM_EN(v)          BM_TCU_CTRL_PWM_EN
#define BF_TCU_CTRL_PWM_EN_V(e)         BF_TCU_CTRL_PWM_EN(BV_TCU_CTRL_PWM_EN__##e)
#define BFM_TCU_CTRL_PWM_EN_V(v)        BM_TCU_CTRL_PWM_EN
#define BP_TCU_CTRL_PWM_IN_EN           6
#define BM_TCU_CTRL_PWM_IN_EN           0x40
#define BF_TCU_CTRL_PWM_IN_EN(v)        (((v) & 0x1) << 6)
#define BFM_TCU_CTRL_PWM_IN_EN(v)       BM_TCU_CTRL_PWM_IN_EN
#define BF_TCU_CTRL_PWM_IN_EN_V(e)      BF_TCU_CTRL_PWM_IN_EN(BV_TCU_CTRL_PWM_IN_EN__##e)
#define BFM_TCU_CTRL_PWM_IN_EN_V(v)     BM_TCU_CTRL_PWM_IN_EN
#define BP_TCU_CTRL_PRESCALE            3
#define BM_TCU_CTRL_PRESCALE            0x38
#define BV_TCU_CTRL_PRESCALE__1         0x0
#define BV_TCU_CTRL_PRESCALE__4         0x1
#define BV_TCU_CTRL_PRESCALE__16        0x2
#define BV_TCU_CTRL_PRESCALE__64        0x3
#define BV_TCU_CTRL_PRESCALE__256       0x4
#define BV_TCU_CTRL_PRESCALE__1024      0x5
#define BF_TCU_CTRL_PRESCALE(v)         (((v) & 0x7) << 3)
#define BFM_TCU_CTRL_PRESCALE(v)        BM_TCU_CTRL_PRESCALE
#define BF_TCU_CTRL_PRESCALE_V(e)       BF_TCU_CTRL_PRESCALE(BV_TCU_CTRL_PRESCALE__##e)
#define BFM_TCU_CTRL_PRESCALE_V(v)      BM_TCU_CTRL_PRESCALE
#define BP_TCU_CTRL_EXT_EN              2
#define BM_TCU_CTRL_EXT_EN              0x4
#define BF_TCU_CTRL_EXT_EN(v)           (((v) & 0x1) << 2)
#define BFM_TCU_CTRL_EXT_EN(v)          BM_TCU_CTRL_EXT_EN
#define BF_TCU_CTRL_EXT_EN_V(e)         BF_TCU_CTRL_EXT_EN(BV_TCU_CTRL_EXT_EN__##e)
#define BFM_TCU_CTRL_EXT_EN_V(v)        BM_TCU_CTRL_EXT_EN
#define BP_TCU_CTRL_RTC_EN              1
#define BM_TCU_CTRL_RTC_EN              0x2
#define BF_TCU_CTRL_RTC_EN(v)           (((v) & 0x1) << 1)
#define BFM_TCU_CTRL_RTC_EN(v)          BM_TCU_CTRL_RTC_EN
#define BF_TCU_CTRL_RTC_EN_V(e)         BF_TCU_CTRL_RTC_EN(BV_TCU_CTRL_RTC_EN__##e)
#define BFM_TCU_CTRL_RTC_EN_V(v)        BM_TCU_CTRL_RTC_EN
#define BP_TCU_CTRL_PCK_EN              0
#define BM_TCU_CTRL_PCK_EN              0x1
#define BF_TCU_CTRL_PCK_EN(v)           (((v) & 0x1) << 0)
#define BFM_TCU_CTRL_PCK_EN(v)          BM_TCU_CTRL_PCK_EN
#define BF_TCU_CTRL_PCK_EN_V(e)         BF_TCU_CTRL_PCK_EN(BV_TCU_CTRL_PCK_EN__##e)
#define BFM_TCU_CTRL_PCK_EN_V(v)        BM_TCU_CTRL_PCK_EN

#define REG_TCU_TSTR            jz_reg(TCU_TSTR)
#define JA_TCU_TSTR             (0xb0002000 + 0xf0)
#define JT_TCU_TSTR             JIO_32_RW
#define JN_TCU_TSTR             TCU_TSTR
#define JI_TCU_TSTR             
#define REG_TCU_TSTR_SET        jz_reg(TCU_TSTR_SET)
#define JA_TCU_TSTR_SET         (JA_TCU_TSTR + 0x4)
#define JT_TCU_TSTR_SET         JIO_32_WO
#define JN_TCU_TSTR_SET         TCU_TSTR
#define JI_TCU_TSTR_SET         
#define REG_TCU_TSTR_CLR        jz_reg(TCU_TSTR_CLR)
#define JA_TCU_TSTR_CLR         (JA_TCU_TSTR + 0x8)
#define JT_TCU_TSTR_CLR         JIO_32_WO
#define JN_TCU_TSTR_CLR         TCU_TSTR
#define JI_TCU_TSTR_CLR         
#define BP_TCU_TSTR_REAL2       18
#define BM_TCU_TSTR_REAL2       0x40000
#define BF_TCU_TSTR_REAL2(v)    (((v) & 0x1) << 18)
#define BFM_TCU_TSTR_REAL2(v)   BM_TCU_TSTR_REAL2
#define BF_TCU_TSTR_REAL2_V(e)  BF_TCU_TSTR_REAL2(BV_TCU_TSTR_REAL2__##e)
#define BFM_TCU_TSTR_REAL2_V(v) BM_TCU_TSTR_REAL2
#define BP_TCU_TSTR_REAL1       17
#define BM_TCU_TSTR_REAL1       0x20000
#define BF_TCU_TSTR_REAL1(v)    (((v) & 0x1) << 17)
#define BFM_TCU_TSTR_REAL1(v)   BM_TCU_TSTR_REAL1
#define BF_TCU_TSTR_REAL1_V(e)  BF_TCU_TSTR_REAL1(BV_TCU_TSTR_REAL1__##e)
#define BFM_TCU_TSTR_REAL1_V(v) BM_TCU_TSTR_REAL1
#define BP_TCU_TSTR_BUSY2       2
#define BM_TCU_TSTR_BUSY2       0x4
#define BF_TCU_TSTR_BUSY2(v)    (((v) & 0x1) << 2)
#define BFM_TCU_TSTR_BUSY2(v)   BM_TCU_TSTR_BUSY2
#define BF_TCU_TSTR_BUSY2_V(e)  BF_TCU_TSTR_BUSY2(BV_TCU_TSTR_BUSY2__##e)
#define BFM_TCU_TSTR_BUSY2_V(v) BM_TCU_TSTR_BUSY2
#define BP_TCU_TSTR_BUSY1       1
#define BM_TCU_TSTR_BUSY1       0x2
#define BF_TCU_TSTR_BUSY1(v)    (((v) & 0x1) << 1)
#define BFM_TCU_TSTR_BUSY1(v)   BM_TCU_TSTR_BUSY1
#define BF_TCU_TSTR_BUSY1_V(e)  BF_TCU_TSTR_BUSY1(BV_TCU_TSTR_BUSY1__##e)
#define BFM_TCU_TSTR_BUSY1_V(v) BM_TCU_TSTR_BUSY1

#endif /* __HEADERGEN_TCU_H__*/
