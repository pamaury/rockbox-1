/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 2.1.8
 * XML versions: pp6110:1.0
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN__PP6110__LCD3__H__
#define __HEADERGEN__PP6110__LCD3__H__
#include "regs-macro.h"

#define REGS_LCD3_BASE (0x70009200)

#define REGS_LCD3_VERSION "1.0"

/**
 * Register: HW_LCD3_VDCTRL0
 * Address: 0
 * SCT: no
 */
#define HW_LCD3_VDCTRL0                     (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x0))
/* Field: HSYNC_LAST_DATA
 * Description: Last clock at which pixel data is sent. This is the back porch 
 * (HBP) + number of pixels per row (WIDTH) - 1 */
#define BP_LCD3_VDCTRL0_HSYNC_LAST_DATA     16
#define BM_LCD3_VDCTRL0_HSYNC_LAST_DATA     0x7ff0000
#define BF_LCD3_VDCTRL0_HSYNC_LAST_DATA(v)  (((v) << 16) & 0x7ff0000)
/* Field: HSYNC_FIRST_DATA
 * Description: First clock at which pixel data starts. This is the back porch 
 * (HBP) */
#define BP_LCD3_VDCTRL0_HSYNC_FIRST_DATA    0
#define BM_LCD3_VDCTRL0_HSYNC_FIRST_DATA    0x7ff
#define BF_LCD3_VDCTRL0_HSYNC_FIRST_DATA(v) (((v) << 0) & 0x7ff)

/**
 * Register: HW_LCD3_VDCTRL1
 * Address: 0x4
 * SCT: no
 */
#define HW_LCD3_VDCTRL1                     (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x4))
/* Field: HSYNC_LAST_HIGH
 * Description: Last clock at which the HSYNC signal is high in the row. This is
 *  the total the back porch (HBP) + number of pixels per row (WIDTH) + front 
 * porch (HFP) - 1 (also VSYNC period - 1). */
#define BP_LCD3_VDCTRL1_HSYNC_LAST_HIGH     16
#define BM_LCD3_VDCTRL1_HSYNC_LAST_HIGH     0x1ff0000
#define BF_LCD3_VDCTRL1_HSYNC_LAST_HIGH(v)  (((v) << 16) & 0x1ff0000)
/* Field: HSYNC_LAST_LOW
 * Description: Last clock at which the HSYNC signal is low in the row. This is 
 * the HSYNC pulse width (HPW) - 1. */
#define BP_LCD3_VDCTRL1_HSYNC_LAST_LOW      0
#define BM_LCD3_VDCTRL1_HSYNC_LAST_LOW      0xff
#define BF_LCD3_VDCTRL1_HSYNC_LAST_LOW(v)   (((v) << 0) & 0xff)

/**
 * Register: HW_LCD3_VDCTRL2
 * Address: 0x8
 * SCT: no
 */
#define HW_LCD3_VDCTRL2                         (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x8))
/* Field: DISABLE
 * Description: Disable HSYNC ENABLE signal ? */
#define BP_LCD3_VDCTRL2_DISABLE                 31
#define BM_LCD3_VDCTRL2_DISABLE                 0x80000000
#define BF_LCD3_VDCTRL2_DISABLE(v)              (((v) << 31) & 0x80000000)
/* Field: HSYNC_FIRST_ENABLE
 * Description: First clock at which the ENABLE signal is high again in the row.
 *  This is usually the back porch (HBP) + number of pixels per row (WIDTH) */
#define BP_LCD3_VDCTRL2_HSYNC_FIRST_ENABLE      16
#define BM_LCD3_VDCTRL2_HSYNC_FIRST_ENABLE      0x7ff0000
#define BF_LCD3_VDCTRL2_HSYNC_FIRST_ENABLE(v)   (((v) << 16) & 0x7ff0000)
/* Field: HSYNC_LAST_ENABLE
 * Description: Last clock at which the ENABLE signal is high at the beginning 
 * of the row. This is usually the back porch (HBP) - 1. */
#define BP_LCD3_VDCTRL2_HSYNC_LAST_ENABLE       0
#define BM_LCD3_VDCTRL2_HSYNC_LAST_ENABLE       0x7ff
#define BF_LCD3_VDCTRL2_HSYNC_LAST_ENABLE(v)    (((v) << 0) & 0x7ff)

/**
 * Register: HW_LCD3_VDCTRL3
 * Address: 0xc
 * SCT: no
 */
#define HW_LCD3_VDCTRL3                     (*(volatile unsigned long *)(REGS_LCD3_BASE + 0xc))
/* Field: VSYNC_LAST_DATA
 * Description: Last row at which pixel data is sent. This is the back porch 
 * (VBP) + number of rows (HEIGHT) - 1 */
#define BP_LCD3_VDCTRL3_VSYNC_LAST_DATA     16
#define BM_LCD3_VDCTRL3_VSYNC_LAST_DATA     0x7ff0000
#define BF_LCD3_VDCTRL3_VSYNC_LAST_DATA(v)  (((v) << 16) & 0x7ff0000)
/* Field: VSYNC_FIRST_DATA
 * Description: First riw at which pixel data starts. This is the back porch 
 * (VBP) */
#define BP_LCD3_VDCTRL3_VSYNC_FIRST_DATA    0
#define BM_LCD3_VDCTRL3_VSYNC_FIRST_DATA    0x7ff
#define BF_LCD3_VDCTRL3_VSYNC_FIRST_DATA(v) (((v) << 0) & 0x7ff)

/**
 * Register: HW_LCD3_VDCTRL4
 * Address: 0x10
 * SCT: no
 */
#define HW_LCD3_VDCTRL4                     (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x10))
/* Field: VSYNC_LAST_HIGH
 * Description: Last row at which the VSYNC signal is high in the frame. This is
 *  the total the back porch (VBP) + number of rows (HEIGHT) + front porch (VFP)
 *  - 1 (also VSYNC period - 1). */
#define BP_LCD3_VDCTRL4_VSYNC_LAST_HIGH     16
#define BM_LCD3_VDCTRL4_VSYNC_LAST_HIGH     0x1ff0000
#define BF_LCD3_VDCTRL4_VSYNC_LAST_HIGH(v)  (((v) << 16) & 0x1ff0000)
/* Field: VSYNC_LAST_LOW
 * Description: Last row at which the VSYNC signal is low in the frame. This is 
 * the VSYNC pulse width (VPW) - 1. */
#define BP_LCD3_VDCTRL4_VSYNC_LAST_LOW      0
#define BM_LCD3_VDCTRL4_VSYNC_LAST_LOW      0xff
#define BF_LCD3_VDCTRL4_VSYNC_LAST_LOW(v)   (((v) << 0) & 0xff)

/**
 * Register: HW_LCD3_VDCTRL5
 * Address: 0x14
 * SCT: no
 */
#define HW_LCD3_VDCTRL5                         (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x14))
/* Field: DISABLE
 * Description: Disable VSYNC ENABLE signal ? */
#define BP_LCD3_VDCTRL5_DISABLE                 31
#define BM_LCD3_VDCTRL5_DISABLE                 0x80000000
#define BF_LCD3_VDCTRL5_DISABLE(v)              (((v) << 31) & 0x80000000)
/* Field: VSYNC_FIRST_ENABLE
 * Description: First row at which the ENABLE signal is high again in the frame.
 *  This is usually the back porch (VBP) + number of rows (HEIGHT). */
#define BP_LCD3_VDCTRL5_VSYNC_FIRST_ENABLE      16
#define BM_LCD3_VDCTRL5_VSYNC_FIRST_ENABLE      0x7ff0000
#define BF_LCD3_VDCTRL5_VSYNC_FIRST_ENABLE(v)   (((v) << 16) & 0x7ff0000)
/* Field: VSYNC_LAST_ENABLE
 * Description: Last row at which the ENABLE signal is high. This is usually the
 *  back porch (VBP) - 1 */
#define BP_LCD3_VDCTRL5_VSYNC_LAST_ENABLE       0
#define BM_LCD3_VDCTRL5_VSYNC_LAST_ENABLE       0x7ff
#define BF_LCD3_VDCTRL5_VSYNC_LAST_ENABLE(v)    (((v) << 0) & 0x7ff)

/**
 * Register: HW_LCD3_CTRL0
 * Address: 0x20
 * SCT: no
 */
#define HW_LCD3_CTRL0           (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x20))
#define BP_LCD3_CTRL0_UNK7      7
#define BM_LCD3_CTRL0_UNK7      0x80
#define BF_LCD3_CTRL0_UNK7(v)   (((v) << 7) & 0x80)
#define BP_LCD3_CTRL0_UNK6      6
#define BM_LCD3_CTRL0_UNK6      0x40
#define BF_LCD3_CTRL0_UNK6(v)   (((v) << 6) & 0x40)
#define BP_LCD3_CTRL0_UNK5      5
#define BM_LCD3_CTRL0_UNK5      0x20
#define BF_LCD3_CTRL0_UNK5(v)   (((v) << 5) & 0x20)

/**
 * Register: HW_LCD3_CTRL1
 * Address: 0x24
 * SCT: no
 */
#define HW_LCD3_CTRL1                   (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x24))
#define BP_LCD3_CTRL1_UNK30_22          22
#define BM_LCD3_CTRL1_UNK30_22          0x7fc00000
#define BF_LCD3_CTRL1_UNK30_22(v)       (((v) << 22) & 0x7fc00000)
#define BP_LCD3_CTRL1_UNK19             19
#define BM_LCD3_CTRL1_UNK19             0x80000
#define BF_LCD3_CTRL1_UNK19(v)          (((v) << 19) & 0x80000)
#define BP_LCD3_CTRL1_UNK18_16          16
#define BM_LCD3_CTRL1_UNK18_16          0x70000
#define BF_LCD3_CTRL1_UNK18_16(v)       (((v) << 16) & 0x70000)
#define BP_LCD3_CTRL1_UNK15             15
#define BM_LCD3_CTRL1_UNK15             0x8000
#define BF_LCD3_CTRL1_UNK15(v)          (((v) << 15) & 0x8000)
#define BP_LCD3_CTRL1_UNK14             14
#define BM_LCD3_CTRL1_UNK14             0x4000
#define BF_LCD3_CTRL1_UNK14(v)          (((v) << 14) & 0x4000)
#define BP_LCD3_CTRL1_UNK13             13
#define BM_LCD3_CTRL1_UNK13             0x2000
#define BF_LCD3_CTRL1_UNK13(v)          (((v) << 13) & 0x2000)
#define BP_LCD3_CTRL1_UNK12             12
#define BM_LCD3_CTRL1_UNK12             0x1000
#define BF_LCD3_CTRL1_UNK12(v)          (((v) << 12) & 0x1000)
#define BP_LCD3_CTRL1_UNK11             11
#define BM_LCD3_CTRL1_UNK11             0x800
#define BF_LCD3_CTRL1_UNK11(v)          (((v) << 11) & 0x800)
#define BP_LCD3_CTRL1_UNK10             10
#define BM_LCD3_CTRL1_UNK10             0x400
#define BF_LCD3_CTRL1_UNK10(v)          (((v) << 10) & 0x400)
#define BP_LCD3_CTRL1_UNK9_8            8
#define BM_LCD3_CTRL1_UNK9_8            0x300
#define BF_LCD3_CTRL1_UNK9_8(v)         (((v) << 8) & 0x300)
#define BP_LCD3_CTRL1_UNK7              7
#define BM_LCD3_CTRL1_UNK7              0x80
#define BF_LCD3_CTRL1_UNK7(v)           (((v) << 7) & 0x80)
#define BP_LCD3_CTRL1_WORDLENGTH        4
#define BM_LCD3_CTRL1_WORDLENGTH        0x70
#define BV_LCD3_CTRL1_WORDLENGTH__8BIT  0x1
#define BV_LCD3_CTRL1_WORDLENGTH__16BIT 0x2
#define BV_LCD3_CTRL1_WORDLENGTH__18BIT 0x3
#define BV_LCD3_CTRL1_WORDLENGTH__24BIT 0x4
#define BF_LCD3_CTRL1_WORDLENGTH(v)     (((v) << 4) & 0x70)
#define BF_LCD3_CTRL1_WORDLENGTH_V(v)   ((BV_LCD3_CTRL1_WORDLENGTH__##v << 4) & 0x70)
#define BP_LCD3_CTRL1_UNK3_2            2
#define BM_LCD3_CTRL1_UNK3_2            0xc
#define BF_LCD3_CTRL1_UNK3_2(v)         (((v) << 2) & 0xc)
#define BP_LCD3_CTRL1_UNK0              0
#define BM_LCD3_CTRL1_UNK0              0x1
#define BF_LCD3_CTRL1_UNK0(v)           (((v) << 0) & 0x1)

/**
 * Register: HW_LCD3_REG28
 * Address: 0x28
 * SCT: no
 */
#define HW_LCD3_REG28   (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x28))

/**
 * Register: HW_LCD3_REG30
 * Address: 0x30
 * SCT: no
 */
#define HW_LCD3_REG30   (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x30))

/**
 * Register: HW_LCD3_WINDOW0
 * Address: 0x34
 * SCT: no
 */
#define HW_LCD3_WINDOW0         (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x34))
/* Field: LEFT
 * Description: First pixel on the row to send. */
#define BP_LCD3_WINDOW0_LEFT    16
#define BM_LCD3_WINDOW0_LEFT    0x7ff0000
#define BF_LCD3_WINDOW0_LEFT(v) (((v) << 16) & 0x7ff0000)
/* Field: TOP
 * Description: First row to update */
#define BP_LCD3_WINDOW0_TOP     0
#define BM_LCD3_WINDOW0_TOP     0x7ff
#define BF_LCD3_WINDOW0_TOP(v)  (((v) << 0) & 0x7ff)

/**
 * Register: HW_LCD3_WINDOW1
 * Address: 0x38
 * SCT: no
 */
#define HW_LCD3_WINDOW1             (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x38))
/* Field: RIGHT
 * Description: Last pixel on the row to send. */
#define BP_LCD3_WINDOW1_RIGHT       16
#define BM_LCD3_WINDOW1_RIGHT       0x7ff0000
#define BF_LCD3_WINDOW1_RIGHT(v)    (((v) << 16) & 0x7ff0000)
/* Field: BOTTOM
 * Description: Last row to send. */
#define BP_LCD3_WINDOW1_BOTTOM      0
#define BM_LCD3_WINDOW1_BOTTOM      0xfff
#define BF_LCD3_WINDOW1_BOTTOM(v)   (((v) << 0) & 0xfff)

/**
 * Register: HW_LCD3_REG40
 * Address: 0x40
 * SCT: no
 */
#define HW_LCD3_REG40   (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x40))

/**
 * Register: HW_LCD3_REG4C
 * Address: 0x4c
 * SCT: no
 */
#define HW_LCD3_REG4C               (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x4c))
#define BP_LCD3_REG4C_UNK23         23
#define BM_LCD3_REG4C_UNK23         0x800000
#define BF_LCD3_REG4C_UNK23(v)      (((v) << 23) & 0x800000)
#define BP_LCD3_REG4C_UNK22         22
#define BM_LCD3_REG4C_UNK22         0x400000
#define BF_LCD3_REG4C_UNK22(v)      (((v) << 22) & 0x400000)
#define BP_LCD3_REG4C_UNK20         20
#define BM_LCD3_REG4C_UNK20         0x100000
#define BF_LCD3_REG4C_UNK20(v)      (((v) << 20) & 0x100000)
#define BP_LCD3_REG4C_UNK19_16      16
#define BM_LCD3_REG4C_UNK19_16      0xf0000
#define BF_LCD3_REG4C_UNK19_16(v)   (((v) << 16) & 0xf0000)
#define BP_LCD3_REG4C_UNK15         15
#define BM_LCD3_REG4C_UNK15         0x8000
#define BF_LCD3_REG4C_UNK15(v)      (((v) << 15) & 0x8000)
#define BP_LCD3_REG4C_UNK14         14
#define BM_LCD3_REG4C_UNK14         0x4000
#define BF_LCD3_REG4C_UNK14(v)      (((v) << 14) & 0x4000)
#define BP_LCD3_REG4C_UNK12_8       8
#define BM_LCD3_REG4C_UNK12_8       0x1f00
#define BF_LCD3_REG4C_UNK12_8(v)    (((v) << 8) & 0x1f00)
#define BP_LCD3_REG4C_UNK7_0        0
#define BM_LCD3_REG4C_UNK7_0        0xff
#define BF_LCD3_REG4C_UNK7_0(v)     (((v) << 0) & 0xff)

/**
 * Register: HW_LCD3_REG80
 * Address: 0x80
 * SCT: no
 */
#define HW_LCD3_REG80               (*(volatile unsigned long *)(REGS_LCD3_BASE + 0x80))
/* Field: MAGIC
 * Description: Set to 0xABCD */
#define BP_LCD3_REG80_MAGIC         0
#define BM_LCD3_REG80_MAGIC         0xffffffff
#define BV_LCD3_REG80_MAGIC__MAGIC  0xabcd
#define BF_LCD3_REG80_MAGIC(v)      (((v) << 0) & 0xffffffff)
#define BF_LCD3_REG80_MAGIC_V(v)    ((BV_LCD3_REG80_MAGIC__##v << 0) & 0xffffffff)

#endif /* __HEADERGEN__PP6110__LCD3__H__ */
