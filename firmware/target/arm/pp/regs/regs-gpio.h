/***************************************************************************
 *             __________               __   ___.
 *   Open      \______   \ ____   ____ |  | _\_ |__   _______  ___
 *   Source     |       _//  _ \_/ ___\|  |/ /| __ \ /  _ \  \/  /
 *   Jukebox    |    |   (  <_> )  \___|    < | \_\ (  <_> > <  <
 *   Firmware   |____|_  /\____/ \___  >__|_ \|___  /\____/__/\_ \
 *                     \/            \/     \/    \/            \/
 * This file was automatically generated by headergen, DO NOT EDIT it.
 * headergen version: 2.1.8
 * XML versions: pp6110:1.0
 *
 * Copyright (C) 2013 by Amaury Pouly
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 ****************************************************************************/
#ifndef __HEADERGEN__PP6110__GPIO__H__
#define __HEADERGEN__PP6110__GPIO__H__
#include "regs-macro.h"

#define REGS_GPIO_BASE (0x6000d000)

#define REGS_GPIO_VERSION "1.0"

/**
 * Register: HW_GPIO_ENABLEn
 * Address: ((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_ENABLEn(n)          (*(volatile unsigned long *)(REGS_GPIO_BASE + (((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_ENABLEn_VALUE       0
#define BM_GPIO_ENABLEn_VALUE       0xff
#define BF_GPIO_ENABLEn_VALUE(v)    (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_OUTPUT_ENn
 * Address: 0x10+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_OUTPUT_ENn(n)       (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x10+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_OUTPUT_ENn_VALUE    0
#define BM_GPIO_OUTPUT_ENn_VALUE    0xff
#define BF_GPIO_OUTPUT_ENn_VALUE(v) (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_OUTPUT_VALn
 * Address: 0x20+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_OUTPUT_VALn(n)          (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x20+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_OUTPUT_VALn_VALUE       0
#define BM_GPIO_OUTPUT_VALn_VALUE       0xff
#define BF_GPIO_OUTPUT_VALn_VALUE(v)    (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_INPUT_VALn
 * Address: 0x30+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_INPUT_VALn(n)       (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x30+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_INPUT_VALn_VALUE    0
#define BM_GPIO_INPUT_VALn_VALUE    0xff
#define BF_GPIO_INPUT_VALn_VALUE(v) (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_INT_STATn
 * Address: 0x40+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_INT_STATn(n)        (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x40+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_INT_STATn_VALUE     0
#define BM_GPIO_INT_STATn_VALUE     0xff
#define BF_GPIO_INT_STATn_VALUE(v)  (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_INT_ENABLEn
 * Address: 0x50+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_INT_ENABLEn(n)          (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x50+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_INT_ENABLEn_VALUE       0
#define BM_GPIO_INT_ENABLEn_VALUE       0xff
#define BF_GPIO_INT_ENABLEn_VALUE(v)    (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_INT_LEVn
 * Address: 0x60+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_INT_LEVn(n)         (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x60+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_INT_LEVn_VALUE      0
#define BM_GPIO_INT_LEVn_VALUE      0xff
#define BF_GPIO_INT_LEVn_VALUE(v)   (((v) << 0) & 0xff)

/**
 * Register: HW_GPIO_INT_CLRn
 * Address: 0x70+((n)/4)*0x80+((n)%4)*4
 * SCT: no
 */
#define HW_GPIO_INT_CLRn(n)         (*(volatile unsigned long *)(REGS_GPIO_BASE + 0x70+(((n))/4)*0x80+(((n))%4)*4))
#define BP_GPIO_INT_CLRn_VALUE      0
#define BM_GPIO_INT_CLRn_VALUE      0xff
#define BF_GPIO_INT_CLRn_VALUE(v)   (((v) << 0) & 0xff)

#endif /* __HEADERGEN__PP6110__GPIO__H__ */
